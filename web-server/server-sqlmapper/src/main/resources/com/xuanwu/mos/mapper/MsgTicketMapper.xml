<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.xuanwu.mos.mapper.MsgTicketMapper">
    <resultMap id="msgTicket" type="com.xuanwu.mos.domain.entity.MsgTicket">
        <id property="id" column="id"/>
        <result property="ticketId" column="ticket_id"/>
        <result property="bizType" column="biz_type"/>
        <result property="packId" column="pack_id"/>
        <result property="frameId" column="frame_id"/>
        <result property="sendType" column="send_type"/>
        <result property="frameContent" column="f_content"/>
        <result property="enterpriseId" column="enterprise_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="msgId" column="msg_id"/>
        <result property="sequenceNumber" column="sequence_number"/>
        <result property="smsType" column="sms_type"/>
        <result property="encodeType" column="encode_type"/>
        <result property="specNumber" column="spec_number"/>
        <result property="total" column="total"/>
        <result property="number" column="number"/>
        <result property="smsContent" column="sms_content"/>
        <result property="mmsTitle" column="mms_title"/>
        <result property="phone" column="phone"/>
        <result property="linkMan" column="name"/>
        <result property="state" column="state"/>
        <result property="customMsgId" column="custom_msg_id"/>
        <result property="postTime" column="post_time"/>
        <result property="submitRespTime" column="submit_resp_time"/>
        <result property="originResult" column="origin_result"/>
        <result property="channelId" column="channel_id"/>
        <result property="userId" column="user_id"/>
        <result property="preContent" column="pre_content"/>
        <result property="sufContent" column="suf_content"/>
        <result property="frameState" column="frame_state"/>
        <result property="frameBizForm" column="frame_biz_form"/>
        <result property="stateReportResult" column="s_result"/>
        <result property="stateReportOriginResult" column="s_origin_result"/>
        <result property="doneTime" column="s_done_time"/>
        <result property="userName" column="user_name"/>
        <result property="bizForm" column="biz_form"/>
        <result property="packState" column="pack_state"/>
        <result property="batchName" column="batch_name"/>
        <result property="isNormal" column="s_is_normal"/>
        <result property="pwd" column="pwd"/>

    </resultMap>

    <resultMap id="packStatInfo" type="com.xuanwu.mos.domain.entity.PackStatInfo">
        <result property="statCount" column="stat_count"/>
        <result property="sendResult" column="state"/>
        <result property="reportResult" column="result"/>
        <result property="bizForm" column="biz_form"/>
    </resultMap>

    <resultMap id="reportTicket" type="com.xuanwu.mos.domain.entity.ReportTicket">
        <result property="bizType" column="biz_type"/>
        <result property="userId" column="user_id"/>
        <result property="enterpriseId" column="enterprise_id"/>
        <result property="channelId" column="channel_id"/>
        <result property="msgType" column="sms_type"/>
        <result property="state" column="state"/>
        <result property="msgId" column="msg_id"/>
        <result property="phone" column="phone"/>
        <result property="smscSeq" column="smsc_seq"/>
    </resultMap>

    <resultMap type="com.xuanwu.mos.domain.entity.TicketCount" id="ticketCount">
        <result property="id" column="id"/>
        <result property="msgType" column="msg_type"/>
        <result property="channelId" column="channel_id"/>
        <result property="userId" column="user_id"/>
        <result property="state" column="state"/>
        <result property="stateCount" column="state_count"/>
        <result property="genDate" column="gen_date"/>
        <result property="postTime" column="stat_date"/>
        <result property="enterpriseId" column="enterprise_id"/>
        <result property="curMaxId" column="cur_max_id"/>
    </resultMap>

    <resultMap id="failTicket" type="com.xuanwu.mos.domain.entity.FailTicket">
        <id property="id" column="id"/>
        <result property="bizTypeId" column="biz_type"/>
        <result property="packId" column="pack_id"/>
        <result property="frameId" column="frame_id"/>
        <result property="phone" column="phone"/>
        <result property="content" column="sms_content"/>
        <result property="userId" column="user_id"/>
        <result property="customMsgId" column="custom_msg_id"/>
    </resultMap>

    <resultMap type="com.xuanwu.mos.dto.IdInfo" id="idInfo">
        <result property="minId" column="min_id"/>
        <result property="maxId" column="max_id"/>
    </resultMap>

    <!-- 统计批次已提交，已成功，已失败号码数 -->
    <select id="findPackStatInfo" resultMap="packStatInfo">
		select count(t.id) as stat_count, t.state, s.result from gsms_msg_ticket t
		left join gsms_statereport s on s.channel_id=t.channel_id and s.msg_id=t.msg_id
		where t.pack_id=#{packId}
		and t.sms_type=#{msgType} and t.number=1
		group by t.state, s.result
	</select>

    <!-- 获取信息包中已发送的号码数-->
    <select id="findSendedPackTicketsCount" resultType="int">
        select count(t.id) from gsms_msg_ticket t
        inner join gsms_msg_frame f on f.id=t.frame_id
        <if test="joinReport">left join gsms_statereport s on s.channel_id=t.channel_id and s.msg_id=t.msg_id</if>
        where t.pack_id=#{packId}
        <choose>
            <when test="msgType==1">and (t.sms_type=1 or t.sms_type=9)</when>
            <otherwise>and t.sms_type=#{msgType}</otherwise>
        </choose>
        <if test="phone !=null">and t.phone=#{phone}</if>
        <if test="msgSub.index>0">
            <choose>
                <when test="msgSub.index==1">and t.number=1</when>
                <when test="msgSub.index==2">and (t.total=1 or (t.total>1 and number=0))</when>
                <otherwise>and (t.total=1 or (t.total>1 and number>0))</otherwise>
            </choose>
        </if>
        <if test="msgStatus.index > 0">
            <choose>
                <!-- 已提交 1,发送成功  2,发送失败 3 -->
                <when test="msgStatus.index==1">and t.state=1 and s.result is null</when>
                <when test="msgStatus.index==2">and t.state=1 and s.result=0</when>
                <otherwise>and (t.state>1 or s.result>0)</otherwise>
            </choose>
        </if>
        <if test="respResult != null">and t.origin_result=#{respResult}</if>
        <if test="reportResult != null">and s.origin_result=#{reportResult}</if>
    </select>

    <!-- 获取信息包号码发送历史记录列表 -->
    <select id="findSendedPackTickets" resultMap="msgTicket">
        select t.*,s.result as s_result,s.origin_result as s_origin_result,s.done_time as s_done_time,f.biz_form as frame_biz_form
        <if test="msgType==2">,f.title as mms_title</if>
        from gsms_msg_ticket t
        inner join gsms_msg_frame f on f.id=t.frame_id
        left join gsms_statereport s on s.channel_id=t.channel_id and s.msg_id=t.msg_id
        where t.pack_id=#{packId}
        <choose>
            <when test="msgType==1">and (t.sms_type=1 or t.sms_type=9)</when>
            <otherwise>and t.sms_type=#{msgType}</otherwise>
        </choose>
        <if test="phone !=null and phone != ''">and t.phone=#{phone}</if>
        <if test="msgSub.index>0">
            <choose>
                <when test="msgSub.index==1">and t.number=1</when>
                <when test="msgSub.index==2">and (t.total=1 or (t.total>1 and number=0))</when>
                <otherwise>and (t.total=1 or (t.total>1 and number>0))</otherwise>
            </choose>
        </if>
        <if test="msgStatus.index > 0">
            <choose>
                <!-- 已提交 1,发送成功  2,发送失败 3 -->
                <when test="msgStatus.index==1">and t.state=1 and s.result is null</when>
                <when test="msgStatus.index==2">and t.state=1 and s.result=0</when>
                <otherwise>and (t.state>1 or s.result>0)</otherwise>
            </choose>
        </if>
        <if test="respResult != null">and t.origin_result=#{respResult}</if>
        <if test="reportResult != null">and s.origin_result=#{reportResult}</if>
        <if test="pi != null">
            <choose>
                <when test="pi.desc">order by t.submit_resp_time desc limit #{pi.descFrom}, #{pi.size}</when>
                <otherwise>order by t.submit_resp_time limit #{pi.from}, #{pi.size}</otherwise>
            </choose>
        </if>
    </select>

    <!-- 获取所有号码发送历史记录数 -->
    <select id="findAllSendedTicketsCount" resultType="int">
        select count(t.id) from gsms_msg_ticket t
        <if test="ticketId != null and ticketId > 0">force index(pri)</if>
        <if test="joinUser">inner join gsms_user u on u.id=t.user_id</if>
        <if test="joinChannel">inner join gsms_carrier_channel c on c.id=t.channel_id</if>
        <if test="joinReport">left join gsms_statereport s on s.channel_id=t.channel_id and s.msg_id=t.msg_id</if>
        <if test="msgType==2 and smsContent != null">inner join gsms_msg_frame f on f.id=t.frame_id and f.title like
            concat('%',#{smsContent},'%')
        </if>
        where
        <choose>
            <when test="msgType==1">(t.sms_type = 1)</when>
            <when test="msgType==9">(t.sms_type = 9)</when>
            <otherwise>t.sms_type=#{msgType}</otherwise>
        </choose>
        and t.submit_resp_time between #{beginTime} and #{endTime}
        <if test="phone != null">and t.phone=#{phone}</if>
        <if test="msgType==1 and smsContent != null">and t.sms_content like concat('%',#{smsContent},'%')</if>
        <choose>
            <when test="packId != null">and t.pack_id=#{packId}</when>
            <when test="packIds.size > 0">and t.pack_id in
                <foreach collection="packIds" item="item" open="(" separator="," close=")">#{item}</foreach>
            </when>
        </choose>
        <if test="userId > 0">and t.user_id=#{userId}</if>
        <if test="deptPath!=null">and u.path like concat(#{deptPath},'%')</if>
        <if test="msgSub.index>0">
            <choose>
                <when test="msgSub.index==1">and t.number=1</when>
                <when test="msgSub.index==2">and (t.total=1 or (t.total>1 and number=0))</when>
                <otherwise>and (t.total=1 or (t.total>1 and number>0))</otherwise>
            </choose>
        </if>
        <if test="msgStatus.index > 0">
            <choose>
                <!-- 已提交 1,发送成功  2,发送失败 3 -->
                <when test="msgStatus.index==1">and t.state=1 and s.result is null</when>
                <when test="msgStatus.index==2">and t.state=1 and s.result=0</when>
                <otherwise>and (t.state>1 or s.result>0)</otherwise>
            </choose>
        </if>
        <if test="respResult != null">and t.origin_result=#{respResult}</if>
        <if test="reportResult != null">and s.origin_result=#{reportResult}</if>
        <if test="channelId > 0">and c.id=#{channelId}</if>
        <if test="ticketId != null and ticketId > 0">and t.id &gt; #{ticketId}</if>
    </select>

    <!-- 获取所有号码发送历史记录列表 -->
    <select id="findAllSendedTickets" resultMap="msgTicket">
        select t.*,s.result as s_result,
        <if test="msgType==1">con.name,</if>
        s.origin_result as s_origin_result,s.done_time as s_done_time,f.biz_form as
        frame_biz_form
        <if test="msgType==2">,f.title as mms_title</if>
        from gsms_msg_ticket t
        <if test="msgType==1">force index(ix_tsms_${date}_ptid)</if>
        inner join gsms_msg_frame f on f.id=t.frame_id
        <if test="joinUser">inner join gsms_user u on u.id=t.user_id</if>
        <if test="joinChannel">inner join gsms_carrier_channel c on c.id=t.channel_id</if>
        <if test="msgType==2">
            <if test="smsContent != null">and f.title like concat('%',#{smsContent},'%')</if>
        </if>
        left join gsms_statereport s on s.channel_id=t.channel_id and s.msg_id=t.msg_id
        <if test="msgType==1">left join (select name, phone from gsms_contact GROUP BY phone) con on t.phone = con.phone</if>
        where
        <choose>
            <when test="msgType==1">(t.sms_type = 1)</when>
            <otherwise>t.sms_type=#{msgType}</otherwise>
        </choose>
        and t.submit_resp_time between #{beginTime} and #{endTime}
        <if test="phone != null">and t.phone=#{phone}</if>
        <if test="msgType==1 and smsContent != null">and t.sms_content like concat('%',#{smsContent},'%')</if>
        <choose>
            <when test="packId != null">and t.pack_id=#{packId}</when>
            <when test="packIds.size > 0">and t.pack_id in
                <foreach collection="packIds" item="item" open="(" separator="," close=")">#{item}</foreach>
            </when>
        </choose>
        <if test="userId > 0">and t.user_id=#{userId}</if>
        <if test="deptPath!=null">and u.path like concat(#{deptPath},'%')</if>
        <if test="msgSub.index>0">
            <choose>
                <when test="msgSub.index==1">and t.number=1</when>
                <when test="msgSub.index==2">and (t.total=1 or (t.total>1 and number=0))</when>
                <otherwise>and (t.total=1 or (t.total>1 and number>0))</otherwise>
            </choose>
        </if>
        <if test="msgStatus.index > 0">
            <choose>
                <!-- 已提交 1,发送成功  2,发送失败 3 -->
                <when test="msgStatus.index==1">and t.state=1 and s.result is null</when>
                <when test="msgStatus.index==2">and t.state=1 and s.result=0</when>
                <otherwise>and (t.state>1 or s.result>0)</otherwise>
            </choose>
        </if>
        <if test="respResult != null">and t.origin_result=#{respResult}</if>
        <if test="reportResult != null">and s.origin_result=#{reportResult}</if>
        <if test="channelId > 0">and c.id=#{channelId}</if>
        <choose>
            <when test="id==-1">order by t.submit_resp_time desc limit #{pi.from}, #{pi.size}</when>
            <when test="pi.desc">order by t.submit_resp_time limit #{pi.descFrom}, #{pi.size}</when>
            <otherwise>and t.id &gt; #{id} order by id limit #{pi.size}</otherwise>
        </choose>
    </select>

    <select id="findStateReport" resultMap="msgTicket">
		select s.result as s_result,s.origin_result as s_origin_result,s.done_time as s_done_time
		from gsms_statereport s where s.channel_id=#{channelId} and s.msg_id=#{msgId} limit 0,1
	</select>

    <select id="findMsgTicketsById" resultMap="msgTicket">
		select t.*,s.result as s_result,s.origin_result as s_origin_result,s.done_time as s_done_time
		from gsms_msg_ticket t left join gsms_statereport s on t.msg_id=s.msg_id and t.channel_id=s.channel_id
		where t.id &gt; #{id} and t.parent_id=#{parentId} order by t.id limit #{total}
	</select>

    <select id="findParentMsgTicketsById" resultMap="msgTicket">
		select t.* from gsms_msg_ticket t inner join gsms_msg_ticket p
		on (t.id=p.id and p.total=1) or (t.ticket_id=p.parent_id and t.frame_id=p.frame_id)
		where p.id=#{id}		
	</select>

    <select id="fetchTicketMinAndMaxId" resultMap="idInfo">
		select min(id) as min_id, max(id) as max_id from gsms_msg_ticket where submit_resp_time between #{beginTime} and #{endTime}
    </select>

    <select id="findStatMsgTickets" resultMap="reportTicket">
		select biz_type, user_id, enterprise_id, channel_id, sms_type, state, sequence_number as smsc_seq from gsms_msg_ticket
		where id between #{beginId} and #{endId} and (submit_resp_time between #{beginTime} and #{endTime}) and number > 0
		and sms_type =#{msgType}
	</select>

    <select id="findStatStatereports" resultMap="reportTicket">
		select a.user_id, a.enterprise_id, a.channel_id, a.result as state,a.smsc_sequence as smsc_seq, b.sms_type, b.biz_type, b.msg_id, b.phone
        from gsms_statereport a join gsms_msg_ticket b on (b.channel_id = a.channel_id and b.msg_id = a.msg_id and b.phone = a.dest_phone)
        where b.id between #{beginId} and #{endId} and (b.submit_resp_time between #{beginTime} and #{endTime}) and b.number > 0 and b.state = 1
	</select>

    <select id="findTicketCountMaxId" resultType="long">
		select (case when max(tc.cur_max_id) is null then 0 else max(tc.cur_max_id) end) as cur_max_id  
		from gsms_msg_ticket_count tc where tc.msg_type=#{msgType} and date_format(tc.gen_date,'%m-%d')=date_format(#{time},'%m-%d') 
		order by tc.id desc		
	</select>

    <select id="findTicketCount" resultMap="ticketCount">
        select (case when sum(tc.state_count) is null then 0 else sum(tc.state_count) end) as state_count,
        (case when max(tc.cur_max_id) is null then 0 else max(tc.cur_max_id) end) as cur_max_id
        from gsms_msg_ticket_count tc
        <if test="tc.deptPath != null ">inner join gsms_user u on u.id=tc.user_id</if>
        where tc.msg_type=#{tc.msgType} and tc.stat_date between #{beginTime} and #{endTime}
        and tc.enterprise_id=#{tc.enterpriseId}
        <if test="tc.state != 0">and tc.state=#{tc.state}</if>
        <if test="tc.userId > 0">and tc.user_id=#{tc.userId}</if>
        <if test="tc.channelId > 0">and tc.channel_id=#{tc.channelId}</if>
        <if test="tc.deptPath != null ">and u.path like concat(#{tc.deptPath},'%')</if>
    </select>

    <select id="findTickets" resultMap="msgTicket">
		select * from gsms_msg_ticket t where t.post_time &lt;=#{postTime}
		and (t.total = 1 or (t.total > 1 and t.number = 1))		
		order by t.id asc limit #{from},#{size}
	</select>

    <insert id="insertTicketCount">
		insert into gsms_msg_ticket_count(msg_type,user_id,channel_id,state,state_count,gen_date,stat_date,enterprise_id,cur_max_id) 
		values(#{msgType},#{userId},#{channelId},#{state},#{stateCount},#{genDate},#{postTime},#{enterpriseId},#{curMaxId})         
	</insert>

    <!-- 获取失败话单，用于失败重发 -->
    <select id="findFailedMsgTickets" resultMap="failTicket">
        select t.id, t.biz_type, t.pack_id, t.frame_id, t.phone, t.sms_content, t.user_id, t.custom_msg_id from
        gsms_msg_ticket t
        <if test="path != null">inner join gsms_user u on t.user_id=u.id</if>
        left join gsms_statereport s on t.channel_id = s.channel_id and t.msg_id = s.msg_id
        where t.id > #{pointId} and (t.submit_resp_time between #{beginTime} and #{endTime})
        <if test="phone != null">and phone=#{phone}</if>
        <if test="path != null">and u.path like concat(#{path}, '%')</if>
        <if test="userId > 0">and t.user_id = #{userId}</if>
        and t.enterprise_id = #{entId} and t.sms_type = #{msgType}
        and ((t.state > 1 and t.state &lt; 7) or (t.state = 1 and s.result > 0))
        and (t.total = 1 or (t.total > 1 and t.number = 0)) order by t.id limit #{maxSize}
    </select>

    <select id="findTicketChannelSended" resultType="int">
		select count(1) from ${tableName} where channel_id=#{channelId}
	</select>

    <!-- 获取信息包中被过滤掉的号码数 -->
    <select id="findAllTicketsStateCount" resultType="int">
        select count(t.id) from gsms_msg_ticket t
        inner join gsms_msg_frame f on f.id=t.frame_id
        where t.pack_id=#{packId}
        <choose>
            <when test="msgType==1">and (t.sms_type=1 or t.sms_type=9)</when>
            <otherwise>and t.sms_type=#{msgType}</otherwise>
        </choose>
        <if test="phone!=null">and t.phone=#{phone}</if>
        <if test="msgSub.index>0">
            <choose>
                <when test="msgSub.index==1">and t.number=1</when>
                <when test="msgSub.index==2">and (t.total=1 or (t.total>1 and t.number=0))</when>
                <otherwise>and (t.total=1 or (t.total>1 and t.number>0))</otherwise>
            </choose>
        </if>
    </select>
    <select id="findTicketsByPackId" resultMap="msgTicket">
        select t.*,f.content AS sms_content from gsms_msg_ticket t
        INNER JOIN gsms_msg_frame f on f.id = t.frame_id
        where t.pack_id=#{query.params.packId}
        <if test="query.params.orderRule == 'id desc'"> ORDER  by id desc </if>
        <if test="query.params.orderRule == null"> order by id asc </if>
        <if test="query.params.msgSub.index>0">
            <choose>
                <when test="query.params.msgSub.index==1">and t.number=1</when>
                <when test="query.params.msgSub.index==2">and (t.total=1 or (t.total>1 and t.number=0))</when>
                <otherwise>and (t.total=1 or (t.total>1 and t.number>0))</otherwise>
            </choose>
        </if>
        limit #{query.params.fetchSize}
    </select>
    <select id="findAllTicketsState" resultMap="msgTicket">
        select t.*,f.biz_form as frame_biz_form,f.title as mms_title
        from gsms_msg_ticket t inner join gsms_msg_frame f on f.id=t.frame_id
        where t.pack_id=#{packId}
        <choose>
            <when test="msgType==1">and (t.sms_type=1 or t.sms_type=9)</when>
            <otherwise>and t.sms_type=#{msgType}</otherwise>
        </choose>
        <if test="phone!=null">and t.phone=#{phone}</if>
        <if test="msgSub.index>0">
            <choose>
                <when test="msgSub.index==1">and (t.total=1 or (t.total>1 and t.number=0))</when>
                <when test="msgSub.index==2">and (t.total=1 or (t.total>1 and t.number=0))</when>
                <otherwise>and (t.total=1 or (t.total>1 and t.number>0))</otherwise>
            </choose>
        </if>
        limit #{offset},#{reqNum}
    </select>

    <!-- 郭垚辉 重写mms的号码发送记录sql start-->
    <sql id="findAllMmsNumberRecord_Condition">
        <if test="query.params.enterpriseId!=null">
            and t.enterprise_id = #{query.params.enterpriseId}
        </if>
        <if test="query.params.userId>0">
            AND t.user_id = #{query.params.userId}
        </if>
        <if test="query.params.userIds != null">
            AND  t.user_id IN
            <foreach collection="query.params.userIds" item="userId" open="(" separator="," close=")">#{userId}</foreach>
        </if>

        <if test="query.params.msgType != null and query.params.msgType != 2">
            AND (t.sms_type=1 or (t.sms_type=0 and t.number=1))
        </if>
        <if test="query.params.path!=null">
            AND u.path like concat(#{query.params.path},'%')
        </if>
        <!--<if test="query.params.msgType != null">
            AND p.msg_type = #{query.params.msgType}
        </if>-->
        <choose>
            <when test="query.params.fBizForm != null and query.params.fBizForm>-1 and query.params.fBizForm!=6">AND f.biz_form=#{query.params.fBizForm}</when>
            <when test="query.params.fBizForm != null and query.params.fBizForm==6">AND f.biz_form IN (6,19)</when>
        </choose>
        <if test="query.params.packState!=null and query.params.packState>-1">
            AND p.state = #{query.params.packState}
        </if>
        <if test="query.params.reportState!=null and query.params.reportState == 0">
            and ((s.is_normal+s.result = 0 AND ISNULL(sst.failCount)) OR (ISNULL(s.result) AND t.origin_result=0))
        </if>
        <if test="query.params.reportState!=null and query.params.reportState > 0">
            and ((s.is_normal + s.result > 0) OR (ISNULL(s.result) AND t.origin_result!=0) OR failCount > 0)
        </if>
        <if test="query.params.phone!=null and query.params.phone!=''">
            AND t.phone = #{query.params.phone}
        </if>
        <if test="query.params.tOriginResult!=null and query.params.tOriginResult!=''">
            AND t.origin_result like concat('%',#{query.params.tOriginResult},'%')
        </if>
        <if test="query.params.sOriginResult!=null and query.params.sOriginResult!=''">
            AND s.origin_result like concat('%',#{query.params.sOriginResult},'%')
        </if>
        <if test="query.params.channelId>0">
            AND c.channel_id = #{query.params.channelId}
        </if>
        <if test="query.params.beginTime!=null">
            AND t.post_time &gt;= #{query.params.beginTime}
        </if>
        <if test="query.params.endTime!=null">
            and t.post_time &lt;= #{query.params.endTime}
        </if>
        <if test="query.params.packId!=null">
            and t.pack_id = #{query.params.packId}
        </if>
        <if test="query.params.batchName!=null">
            and p.batch_name = #{query.params.batchName}
        </if>
        <if test="query.params.specNumber!=null">
            and c.id = #{query.params.specNumber}
        </if>
        <if test="query.params._eq_tOriginResult!=null">
            and t.origin_result = #{query.params._eq_tOriginResult}
        </if>
        <if test="query.params._eq_sOriginResult!=null">
            and s.origin_result = #{query.params._eq_sOriginResult}
        </if>
        <if test="query.params._lk_batchName!=null">
            and p.batch_name like concat('%',#{query.params._lk_batchName},'%')
        </if>

    </sql>

    <!-- 获取所有号码发送历史记录数 -->
    <select id="findAllMmsNumberRecordCount" resultType="int">
        select count(t.id) from gsms_msg_ticket t
        INNER JOIN gsms_msg_frame AS f ON f.id = t.frame_id
        INNER JOIN gsms_msg_pack AS p ON p.id = t.pack_id
        <if test="query.params.path!=null">
        INNER JOIN gsms_user AS u ON u.id = t.user_id
        </if>
        <if test="query.params.specNumber!=null">
        LEFT JOIN gsms_carrier_channel AS c ON c.id = t.channel_id
        </if>
        LEFT JOIN gsms_statereport AS s ON s.channel_id = t.channel_id AND s.msg_id = t.msg_id
        <if test="query.params.reportState!=null and query.params.reportState!=-1">
            LEFT JOIN (
            SELECT
            st.parent_id as ticket_id,
            count(*) as failCount
            FROM
            gsms_msg_ticket st
            LEFT JOIN gsms_statereport ss ON ss.msg_id = st.msg_id
            AND ss.channel_id = st.channel_id
            WHERE
            st.enterprise_id = #{query.params.enterpriseId} AND ss.is_normal + ss.result > 0
            GROUP BY st.parent_id
            ) sst ON sst.ticket_id = t.ticket_id
        </if>
        WHERE 1=1
        <include refid="findAllMmsNumberRecord_Condition"/>
    </select>


    <!-- 获取所有号码发送历史记录列表 -->
    <select id="findAllMmsNumberRecord" resultMap="msgTicket">
        select
        t.id AS id,
        t.ticket_id AS ticket_id,
        t.channel_id AS channel_id,
        t.post_time AS post_time,
        t.submit_resp_time AS submit_resp_time,
        t.origin_result AS origin_result,
        t.phone AS phone,
        t.state AS state,
        t.pre_content,
        t.suf_content,
        t.sms_content,
        p.batch_name AS batch_name,
        f.biz_form AS biz_form,
        f.title AS mms_title,
        p.state AS pack_state,
        s.origin_result AS s_origin_result,
        s.result AS s_result,
        u.user_name AS user_name,
        t.spec_number AS spec_number,
        t.parent_id AS parent_id,
        s.is_normal AS s_is_normal,
        p.id AS pack_id,f.send_type,f.content AS f_content,
        t.sms_type AS sms_type
        from gsms_msg_ticket t
        INNER JOIN gsms_msg_frame AS f ON f.id = t.frame_id
        INNER JOIN gsms_msg_pack AS p ON p.id = f.msg_pack_id
        INNER JOIN gsms_user AS u ON u.id = t.user_id
        LEFT JOIN gsms_carrier_channel AS c ON c.id = t.channel_id
        LEFT JOIN gsms_statereport AS s ON s.msg_id = t.msg_id AND s.channel_id = t.channel_id
        <if test="query.params.reportState!=null and query.params.reportState!=-1">
            LEFT JOIN (
            SELECT
            st.parent_id as ticket_id,
            count(*) as failCount
            FROM
            gsms_msg_ticket st
            LEFT JOIN gsms_statereport ss ON ss.msg_id = st.msg_id
            AND ss.channel_id = st.channel_id
            WHERE
            ss.is_normal + ss.result > 0
            GROUP BY st.parent_id
            ) sst ON sst.ticket_id = t.ticket_id
        </if>
        WHERE 1=1
        <include refid="findAllMmsNumberRecord_Condition"/>
        order by t.submit_resp_time desc
        <if test="query.page!=null">limit #{query.page.from}, #{query.page.size}</if>
    </select>

    <sql id="checkAllMmsTickets_Condition">
        <if test="query.params.packId!=null">
            and t.pack_id = #{query.params.packId}
        </if>
        <if test="query.params.msgType!=null">
            and f.msg_type = #{query.params.msgType}
        </if>
        <if test="query.params.state!=null and query.params.state == 0">
            and f.biz_form != #{query.param.state}
        </if>
    </sql>
    
    <select id="checkAllMmsTicketsCount" resultType="int">
        SELECT
        count(t.id)
        FROM  gsms_msg_ticket AS t
        INNER JOIN gsms_msg_frame AS f ON t.pack_id = f.msg_pack_id AND t.frame_id = f.id
        WHERE 1=1
        <include refid="checkAllMmsTickets_Condition"/>
    </select>
    <!--
    如果传入的state为0时，显示一个pack包中全部的ticket
    如果传入的state为1时，显示一个pack包被过滤的ticket
    因为frame中的biz_form=0获取的全部发送成功的ticket
    -->
    <select id="checkAllMmsTickets" resultMap="msgTicket">
        SELECT
        t.ticket_id AS ticket_id,
        t.phone AS phone,
        f.biz_form AS biz_form,
        f.title AS mms_title
        FROM  gsms_msg_ticket AS t
        INNER JOIN gsms_msg_frame AS f ON t.pack_id = f.msg_pack_id AND t.frame_id = f.id
        WHERE 1=1
        <include refid="checkAllMmsTickets_Condition"/>
    </select>

    <!--region 获取信息包中被过滤掉的号码数-->
    <sql id="findAbandonPackTickets_Condition">
        <choose>
            <when test="query.params.msgType==1">and (t.sms_type=1 or t.sms_type=9)</when>
            <otherwise></otherwise>
        </choose>
        <if test="query.params.phone!=null">and t.phone=#{query.params.phone}</if>
        <if test="query.params.msgSub !=null and query.params.msgSub.index>0">
            <choose>
                <when test="query.params.msgSub.index==1">and (t.total=1 or (t.total>1 and t.number=0))</when>
                <when test="query.params.msgSub.index==2">and (t.total=1 or (t.total>1 and number=0))</when>
                <otherwise>and (t.total=1 or (t.total>1 and number>0))</otherwise>
            </choose>
        </if>
    </sql>

    <select id="findAbandonPackTicketsCount" resultType="int">
        select count(t.id) from gsms_msg_ticket t
        inner join gsms_msg_frame f on f.id=t.frame_id
        where t.pack_id=#{query.params.packId} and f.state=4
        <include refid="findAbandonPackTickets_Condition"/>
    </select>

    <select id="findAbandonPackTickets" resultMap="msgTicket">
        select t.*,f.biz_form as frame_biz_form,f.title as mms_title
        from gsms_msg_ticket t inner join gsms_msg_frame f on f.id=t.frame_id
        where t.pack_id=#{query.params.packId} and f.state=4
        <include refid="findAbandonPackTickets_Condition"/>
        <if test="query.page!=null">limit #{query.page.from}, #{query.page.size}</if>

    </select>
    <!--endregion -->

    <!-- 郭垚辉 重写mms的号码发送记录sql end-->

    <select id="findFailedTicketByPackId" resultMap="msgTicket">
        SELECT
        t.sms_content,
        t.id,
        s.origin_result,
        s.id,s.msg_id,
        f.user_id,
        f.send_type,
        f.content AS f_content,
        t.phone,
        f.biz_type,
        u.password AS pwd,
        u.user_name AS user_name,
        t.parent_id,
        p.batch_name AS batch_name
        FROM
        gsms_statereport s
        LEFT JOIN gsms_msg_ticket t ON t.channel_id = s.channel_id and t.msg_id = s.msg_id
        LEFT JOIN gsms_msg_frame f on f.id=t.frame_id
        LEFT JOIN gsms_user u on u.id=f.user_id
        LEFT JOIN gsms_msg_pack p on p.id=s.pack_id
        WHERE
        s.pack_id = #{query.params.packId} and ((t.state > 1 <if test="query.params.sysReject != null and query.params.sysReject">and t.state &lt;7</if> ) or (t.state = 1 and s.result > 0))and (t.total = 1 or (t.total > 1 and t.number != 0))
        <if test="query.params.parentId != null">and t.parent_id = #{query.params.parentId}</if>
        <if test="query.params.phone != null">and t.phone = #{query.params.phone}</if>

    </select>
</mapper>
