<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.xuanwu.mos.mapper.StatisticsMapper">
	<resultMap type="com.xuanwu.mos.domain.entity.BaseStatistics" id="baseStatistics">
	    <result property="enterpriseId" column="enterprise_id" />
	    <result property="allReceiveSum" column="all_receive_sum" />
		<result property="allSubmitSum" column="all_submit_sum" />
		<result property="submitSumYD" column="submit_sum_yd" />
		<result property="submitSumLT" column="submit_sum_lt" />
		<result property="submitSumXLT" column="submit_sum_xlt" />
		<result property="submitSumCDMA" column="submit_sum_cdma" />
		<result property="allSendSum" column="all_send_sum" />
		<result property="allSuccessSum" column="all_success_sum" />
		<result property="successSumYD" column="success_sum_yd" />
		<result property="successSumLT" column="success_sum_lt" />
		<result property="successSumXLT" column="success_sum_xlt" />
		<result property="successSumCDMA" column="success_sum_cdma" />
		<result property="allFailSum" column="all_fail_sum" />
		<result property="allCarrierSum" column="all_carrier_sum" />
		<result property="successRate" column="success_rate" />
		<result property="statDate" column="stat_date" />
		<result property="ydSendSum" column="yd_send_sum" />
		<result property="ltSendSum" column="lt_send_sum" />
		<result property="cmdaSendSum" column="cmda_send_sum" />
		<result property="xltSendSum" column="xlt_send_sum" />
		<result property="allReceiveSumStr" column="all_Receive_SumStr" />
		<result property="allSendSumStr" column="all_Send_SumStr" />
		<result property="allSuccessSumStr" column="all_Success_SumStr" />
		<result property="successSumYDStr" column="success_SumYDStr" />
		<result property="successSumLTStr" column="success_SumLTStr" />
		<result property="successSumXLTStr" column="success_SumXLTStr" />
		<result property="successSumCDMAStr" column="success_SumCDMAStr" />
	</resultMap>
	
	<resultMap type="com.xuanwu.mos.domain.entity.DepartmentStatistics" id="deptStatistics" extends="baseStatistics">
		<result property="deptId" column="dept_id" />
		<result property="deptName" column="enterprise_name" />
		<result property="path" column="path" />
	</resultMap>
	
	<resultMap type="com.xuanwu.mos.domain.entity.UserStatistics" id="userStatistics" extends="baseStatistics">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="deptId" column="dept_id" />
		<result property="deptName" column="enterprise_name" />
	</resultMap>
	
	<resultMap type="com.xuanwu.mos.domain.entity.ChannelStatistics" id="channelStatistics" extends="baseStatistics">
	    <result property="channelId" column="channel_id" />
		<result property="channelNum" column="channel_num" />
		<result property="channelName" column="channel_name" />
		<result property="carrierId" column="carrier_id" />
		<result property="stateReport" column="state_report" />
	</resultMap>
	
	<resultMap type="com.xuanwu.mos.domain.entity.BizTypeStatistics" id="bizTypeStatistics" extends="baseStatistics">
	    <result property="bizTypeId" column="biztype_id" />
		<result property="bizTypeName" column="biztype_name" />
		<result property="state" column="state" />
	</resultMap>
	 
	<resultMap type="com.xuanwu.mos.domain.entity.SendReport" id="sendReport">
		<result property="bizType" column="biz_type"/>
		<result property="userId" column="account"/>
		<result property="carrier" column="carrier_id"/>
		<result property="channelId" column="channle_id"/>
		<result property="state" column="state"/>
		<result property="enterpriseId" column="enterprise_id"/>
		<result property="msgType" column="msg_type"/>
	</resultMap>
	
	<resultMap type="com.xuanwu.mos.domain.entity.ResultReport" id="resultReport">
		<result property="bizType" column="biz_type"/>
		<result property="userId" column="account"/>
		<result property="carrier" column="carrier_id"/>
		<result property="channelId" column="channle_id"/>
		<result property="state" column="state"/>
		<result property="enterpriseId" column="enterprise_id"/>
		<result property="msgType" column="msg_type"/>
	</resultMap>
	<!-- 查询部门统计总量统计数据 -->
	<select id="getSumStatistics" resultMap="deptStatistics">
		select s.enterprise_id,s.all_receive_sum, s.all_send_sum,  
		(case when r.all_fail_sum is null then s.all_suc_sum else (s.all_suc_sum - r.all_fail_sum) end) as all_success_sum
		from (select u.id as user_id, u.enterprise_id,u.parent_id as dept_id, 
			sum(a.state_count) as all_receive_sum,
			sum(case when a.state != 7 then a.state_count else 0 end) as all_send_sum,
			sum(case when a.state = 1 then a.state_count else 0 end) as all_suc_sum		
			from gsms_channel_send_report a inner join gsms_user u on u.id = a.account
			where a.enterprise_id=#{params.enterpriseId} and a.state_count > 0 
			<choose>
				<when test="params.smsType==0">
					and a.msg_type in(0,2)
				</when>
				<otherwise>
					and a.msg_type = 4
				</otherwise>
			</choose>
			and a.stat_date between #{params.beginDate} and #{params.endDate}
			
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			</if>
			) s 
		left join (select u.id as user_id,
			sum(case when a.state > 0 then a.state_count else 0 end) as all_fail_sum
			from gsms_channel_result_report a inner join gsms_user u on u.id = a.account 
			where a.enterprise_id=#{params.enterpriseId} and a.state_count > 0
			<choose>
				<when test="params.smsType==0">
					and a.msg_type in(0,2)
				</when>
				<otherwise>
					and a.msg_type = 4
				</otherwise>
			</choose>			 
			and a.stat_date between #{params.beginDate} and #{params.endDate}
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			</if>
			) r 
		on s.user_id = r.user_id
	</select>
	<select id="findDeptAllSend" resultMap="deptStatistics">
		select alldata.enterprise_id,alldata.path,alldata.parent_id,alldata.all_receive_sum,alldata.all_send_sum,alldata.stat_date,
		alldata.all_success_sum,alldata.success_sum_yd,alldata.success_sum_lt,alldata.success_sum_xlt,alldata.success_sum_cdma
		from (
		select history.enterprise_id,history.path,history.parent_id,history.all_receive_sum,history.all_send_sum,history.stat_date,history.all_success_sum,history.success_sum_yd,history.success_sum_lt,history.success_sum_xlt,history.success_sum_cdma 
		from(
			select s.enterprise_id, s.path,s.parent_id,s.all_receive_sum, s.all_send_sum,
			s.stat_date, 
				(case when r.all_fail_sum is null then s.all_suc_sum else (s.all_suc_sum - r.all_fail_sum) end) as all_success_sum,
				(case when r.fail_sum_yd is null then s.send_sum_yd else (s.send_sum_yd - r.fail_sum_yd) end) as success_sum_yd,
				(case when r.fail_sum_lt is null then s.send_sum_lt else (s.send_sum_lt - r.fail_sum_lt) end) as success_sum_lt,
				(case when r.fail_sum_xlt is null then s.send_sum_xlt else (s.send_sum_xlt - r.fail_sum_xlt) end) as success_sum_xlt,
				(case when r.fail_sum_cdma is null then s.send_sum_cdma else (s.send_sum_cdma - r.fail_sum_cdma) end) as success_sum_cdma
			from (select u.path, u.id as user_id,u.parent_id AS parent_id, u.enterprise_id,a.stat_date as stat_date,
					sum(a.state_count) as all_receive_sum,
					sum(case when a.state != 7 then a.state_count else 0 end) as all_send_sum,
					sum(case when a.state = 1 then a.state_count else 0 end) as all_suc_sum,
					sum(case when (a.state = 1 and a.carrier_id = 1) then a.state_count else 0 end) as send_sum_yd,
					sum(case when (a.state = 1 and a.carrier_id = 2) then a.state_count else 0 end) as send_sum_lt,
					sum(case when (a.state = 1 and a.carrier_id = 3) then a.state_count else 0 end) as send_sum_xlt,
					sum(case when (a.state = 1 and a.carrier_id = 4) then a.state_count else 0 end) as send_sum_cdma
					from gsms_channel_send_report a inner join gsms_user u on u.id = a.account
					where a.enterprise_id=#{params.enterpriseId} and a.state_count > 0 
					<choose>
						<when test="params.smsType==0">
							and a.msg_type in(0,2)
						</when>
						<otherwise>
							and a.msg_type = 4
						</otherwise>
					</choose>
					and a.stat_date between #{params.beginDate} and #{params.endDate}				
					<if test="params.path!=null and params.path!=''">
						and u.path like concat(#{params.path}, '%')
					</if>
					
					   	      <choose>
								<when test="params.chartData!=null">
									group by a.stat_date
								</when>
								<otherwise>
									group by a.stat_date,parent_id	
								</otherwise>
							</choose>	
				) s 
				left join (select u.path, u.id as user_id,u.parent_id AS parent_id,a.stat_date as stat_date,
					sum(case when a.state > 0 then a.state_count else 0 end) as all_fail_sum,
					sum(case when (a.state > 0 and a.carrier_id = 1) then a.state_count else 0 end) as fail_sum_yd,
					sum(case when (a.state > 0 and a.carrier_id = 2) then a.state_count else 0 end) as fail_sum_lt,
					sum(case when (a.state > 0 and a.carrier_id = 3) then a.state_count else 0 end) as fail_sum_xlt,
					sum(case when (a.state > 0 and a.carrier_id = 4) then a.state_count else 0 end) as fail_sum_cdma
					from gsms_channel_result_report a inner join gsms_user u on u.id = a.account 
					where a.enterprise_id=#{params.enterpriseId} and a.state_count > 0
					<choose>
						<when test="params.smsType==0">
							and a.msg_type in(0,2)
						</when>
						<otherwise>
							and a.msg_type = 4
						</otherwise>
					</choose>
					and a.stat_date between #{params.beginDate} and #{params.endDate}
					<if test="params.path!=null and params.path!=''">
						and u.path like concat(#{params.path}, '%')
					</if>
				   
				    	      <choose>
								<when test="params.chartData!=null">
									group by a.stat_date
								</when>
								<otherwise>
									 group by a.stat_date,parent_id
								</otherwise>
							</choose>
					) r 
			 on r.parent_id = s.parent_id AND s.stat_date = r.stat_date
		) history
		UNION all 
		select realtime.enterprise_id,realtime.path,realtime.parent_id,realtime.all_receive_sum,realtime.all_send_sum,realtime.stat_date,realtime.all_success_sum,realtime.success_sum_yd,realtime.success_sum_lt,realtime.success_sum_xlt,realtime.success_sum_cdma
		from (
			SELECT SUM(a.receive_count) AS all_receive_sum,
					       SUM(a.submit_count) AS all_send_sum,    
					       SUM(a.submit_count) AS all_success_sum,
					       SUM(CASE WHEN a.carrier= 1 THEN a.submit_count ELSE 0 END) AS success_sum_yd,
					       SUM(CASE WHEN a.carrier= 2 THEN a.submit_count ELSE 0 END) AS success_sum_lt,
					       SUM(CASE WHEN a.carrier= 3 THEN a.submit_count ELSE 0 END) AS success_sum_xlt,
					       SUM(CASE WHEN a.carrier= 4 THEN a.submit_count ELSE 0 END) AS success_sum_cdma,
					       u.path,u.parent_id AS parent_id, u.enterprise_id, a.stat_date as stat_date				  
					       FROM gsms_realtime_send_statistic a 
					       INNER JOIN gsms_user u ON u.id = a.user_id
					       WHERE a.enterprise_id=#{params.enterpriseId} 
					       <choose>
								<when test="params.smsType==0">
									and a.msg_type = 1
								</when>
								<otherwise>
									and a.msg_type = 2
								</otherwise>
							</choose>		       
					       AND a.stat_date = #{params.endDate}
					       <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
					       
					      <choose>
								<when test="params.chartData!=null">
									group by a.stat_date
								</when>
								<otherwise>
									 GROUP BY a.stat_date,u.parent_id
								</otherwise>
							</choose>
					       
		) realtime
		) alldata 
		
		<choose>
			<when test="params.chartData!=null">
				order by stat_date 
			</when>
			<otherwise>
				<if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       			<if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       			<if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if> 
			</otherwise>
		</choose>
		
		<if test="params.querysplit!=null and params.querysplit!=''">
			limit #{page.from}, #{page.size}
		</if>
	</select>
	<select id="findDeptRealTimeSend" resultMap="deptStatistics">
		SELECT SUM(a.receive_count) AS all_receive_sum,
			       SUM(a.submit_count) AS all_send_sum,    
			       SUM(a.submit_count) AS all_success_sum,
			       SUM(CASE WHEN a.carrier= 1 THEN a.submit_count ELSE 0 END) AS success_sum_yd,
			       SUM(CASE WHEN a.carrier= 2 THEN a.submit_count ELSE 0 END) AS success_sum_lt,
			       SUM(CASE WHEN a.carrier= 3 THEN a.submit_count ELSE 0 END) AS success_sum_xlt,
			       SUM(CASE WHEN a.carrier= 4 THEN a.submit_count ELSE 0 END) AS success_sum_cdma,
			       u.path,u.parent_id AS parent_id, u.enterprise_id, a.stat_date as stat_date				  
			       FROM gsms_realtime_send_statistic a 
			       INNER JOIN gsms_user u ON u.id = a.user_id
			       WHERE a.enterprise_id=#{params.enterpriseId} 
			       <choose>
						<when test="params.smsType==0">
							and a.msg_type = 1
						</when>
						<otherwise>
							and a.msg_type = 2
						</otherwise>
					</choose>		       
			       AND a.stat_date = #{params.endDate}
			       <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
			      
			       GROUP BY a.stat_date,u.parent_id 
				<if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       			<if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       			<if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if> 
						
		      	<if test="params.querysplit!=null and params.querysplit!=''">
					limit #{page.from}, #{page.size}
				</if>
	</select>
	<select id="findDeptHistorySend" resultMap="deptStatistics">
		select s.enterprise_id, s.path,s.parent_id,s.all_receive_sum, s.all_send_sum,s.stat_date, 
		(case when r.all_fail_sum is null then s.all_suc_sum else (s.all_suc_sum - r.all_fail_sum) end) as all_success_sum,
		(case when r.fail_sum_yd is null then s.send_sum_yd else (s.send_sum_yd - r.fail_sum_yd) end) as success_sum_yd,
		(case when r.fail_sum_lt is null then s.send_sum_lt else (s.send_sum_lt - r.fail_sum_lt) end) as success_sum_lt,
		(case when r.fail_sum_xlt is null then s.send_sum_xlt else (s.send_sum_xlt - r.fail_sum_xlt) end) as success_sum_xlt,
		(case when r.fail_sum_cdma is null then s.send_sum_cdma else (s.send_sum_cdma - r.fail_sum_cdma) end) as success_sum_cdma
		from (select u.path, u.id as user_id,u.parent_id AS parent_id, u.enterprise_id,u.parent_id as dept_id, 
		    <choose>
				<when test="params.format!=null and params.format!=''">
				  	date_format(a.stat_date,#{params.format}) as stat_date,	      			
				</when>
				<otherwise>
					a.stat_date as stat_date,	
				</otherwise>
			</choose>					
			sum(a.state_count) as all_receive_sum,
			sum(case when a.state != 7 then a.state_count else 0 end) as all_send_sum,
			sum(case when a.state = 1 then a.state_count else 0 end) as all_suc_sum,
			sum(case when (a.state = 1 and a.carrier_id = 1) then a.state_count else 0 end) as send_sum_yd,
			sum(case when (a.state = 1 and a.carrier_id = 2) then a.state_count else 0 end) as send_sum_lt,
			sum(case when (a.state = 1 and a.carrier_id = 3) then a.state_count else 0 end) as send_sum_xlt,
			sum(case when (a.state = 1 and a.carrier_id = 4) then a.state_count else 0 end) as send_sum_cdma
			from gsms_channel_send_report a inner join gsms_user u on u.id = a.account
			where a.enterprise_id=#{params.enterpriseId} and a.state_count > 0 
			<choose>
				<when test="params.smsType==0">
					and a.msg_type in(0,2)
				</when>
				<otherwise>
					and a.msg_type = 4
				</otherwise>
			</choose>
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			</if>
			<choose>
				<when test="params.format!=null and params.format!=''">
				  	and date_format(a.stat_date,#{params.format}) between #{params.beginDate} and #{params.endDate}		
	      			GROUP BY date_format(a.stat_date, #{params.format}),parent_id
				</when>
				<otherwise>
					and a.stat_date between #{params.beginDate} and #{params.endDate}						
					group by a.stat_date,parent_id
				</otherwise>
			</choose>	
		) s 
		left join (select u.path, u.id as user_id,u.parent_id AS parent_id,
			<choose>
				<when test="params.format!=null and params.format!=''">
				  	date_format(a.stat_date,#{params.format}) as stat_date,	      			
				</when>
				<otherwise>
					a.stat_date as stat_date,	
				</otherwise>
			</choose>	
					
			sum(case when a.state > 0 then a.state_count else 0 end) as all_fail_sum,
			sum(case when (a.state > 0 and a.carrier_id = 1) then a.state_count else 0 end) as fail_sum_yd,
			sum(case when (a.state > 0 and a.carrier_id = 2) then a.state_count else 0 end) as fail_sum_lt,
			sum(case when (a.state > 0 and a.carrier_id = 3) then a.state_count else 0 end) as fail_sum_xlt,
			sum(case when (a.state > 0 and a.carrier_id = 4) then a.state_count else 0 end) as fail_sum_cdma
			from gsms_channel_result_report a inner join gsms_user u on u.id = a.account 
			where a.enterprise_id=#{params.enterpriseId} and a.state_count > 0
			<choose>
				<when test="params.smsType==0">
					and a.msg_type in(0,2)
				</when>
				<otherwise>
					and a.msg_type = 4
				</otherwise>
			</choose>
			<if test="params.path!=null and params.path!=''">
						and u.path like concat(#{params.path}, '%')
			</if>
			<choose>
				<when test="params.format!=null and params.format!=''">
				  	and date_format(a.stat_date,#{params.format}) between #{params.beginDate} and #{params.endDate}		
	      			GROUP BY date_format(a.stat_date, #{params.format}),parent_id
				</when>
				<otherwise>
					and a.stat_date between #{params.beginDate} and #{params.endDate}					
					group by a.stat_date,parent_id
				</otherwise>
			</choose>	
			) r 
		on r.parent_id = s.parent_id AND s.stat_date = r.stat_date
		
		<if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
    	<if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
     	<if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if> 	
		<if test="params.querysplit!=null and params.querysplit!=''">
			limit #{page.from}, #{page.size}
		</if>		
	</select>
	<select id="findDeptHistorySendCount" resultType="int">
		SELECT COUNT(*) FROM
		(
			select u.path,u.enterprise_id,u.parent_id as dept_id,
			sum(a.state_count) as all_receive_sum,
			sum(case when a.state != 7 then a.state_count else 0 end) as all_send_sum,
			sum(case when a.state = 1 then a.state_count else 0 end) as all_suc_sum
			from gsms_channel_send_report a inner join gsms_user u on u.id = a.account
			where a.enterprise_id=#{params.enterpriseId} and a.state_count > 0 
			<choose>
				<when test="params.smsType==0">
					and a.msg_type in(0,2)
				</when>
				<otherwise>
					and a.msg_type = 4
				</otherwise>
			</choose>
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			</if>
			<choose>
				<when test="params.format!=null and params.format!=''">
					and date_format(a.stat_date,#{params.format}) between #{params.beginDate} and #{params.endDate}
					group by date_format(a.stat_date,#{params.format}),parent_id
				</when>
				<otherwise>
					and a.stat_date between #{params.beginDate} and #{params.endDate}
					group by a.stat_date,parent_id
				</otherwise>
			</choose>	
		) r
	    
	</select>
	<select id="findDeptRealTimeSendCount" resultType="int">
	   SELECT COUNT(*) from(
	   		SELECT SUM(a.receive_count) AS all_receive_sum,
			       SUM(a.submit_count) AS all_send_sum,    
			       SUM(a.submit_count) AS all_success_sum,		
			       u.path,u.parent_id AS parent_id, u.enterprise_id, a.stat_date as stat_date				  
			       FROM gsms_realtime_send_statistic a 
			       INNER JOIN gsms_user u ON u.id = a.user_id
			       WHERE a.enterprise_id=#{params.enterpriseId} 
			       <choose>
						<when test="params.smsType==0">
							and a.msg_type = 1
						</when>
						<otherwise>
							and a.msg_type = 2
						</otherwise>
					</choose>		       
			       AND a.stat_date = #{params.endDate}
			       <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
			       GROUP BY a.stat_date,u.parent_id
	   ) r
	</select>
	<select id="findDeptAllSendCount" resultType="int">
		SELECT COUNT(*)
		FROM(
			SELECT p.user_id AS user_id,p.dept_id AS dept_id,p.stat_date AS stat_date 
				
				FROM (		
				SELECT 
					s.user_id,s.dept_id,s.stat_date 
					FROM (SELECT u.id AS user_id,u.parent_id AS dept_id,a.stat_date AS stat_date 
					
					FROM gsms_channel_send_report a INNER JOIN gsms_user u ON u.id = a.account
						  WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 					 
						  <choose>
								<when test="params.smsType==0">
									and a.msg_type in(0,2)
								</when>
								<otherwise>
									and a.msg_type = 4
								</otherwise>
							</choose>
						  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}	
						  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>	    				         
						  group by a.stat_date,parent_id	
						  ) s 
					LEFT JOIN(SELECT u.id AS user_id,u.parent_id AS dept_id,a.stat_date
						  FROM gsms_channel_result_report a INNER JOIN gsms_user u ON u.id = a.account
						  WHERE a.enterprise_id=#{params.enterpriseId} 
						  <choose>
								<when test="params.smsType==0">
									and a.msg_type in(0,2)
								</when>
								<otherwise>
									and a.msg_type = 4
								</otherwise>
							</choose>
					
						  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}
						  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	    				  		  
						  group by a.stat_date,parent_id) r 
					ON r.dept_id = s.dept_id AND r.stat_date = s.stat_date) p		
				UNION  
				SELECT	d.user_id AS user_id,d.dept_id AS dept_id, d.stat_date AS stat_date 
					FROM (	
					 SELECT a.user_id,u.parent_id AS dept_id,a.stat_date AS stat_date 
			         FROM gsms_realtime_send_statistic a 
			         INNER JOIN gsms_user u ON u.id = a.user_id
			         WHERE a.enterprise_id=#{params.enterpriseId} 
			        <choose>
						<when test="params.smsType==0">
							and a.msg_type = 1
						</when>
						<otherwise>
							and a.msg_type = 2
						</otherwise>
					</choose>
			         AND a.stat_date = #{params.endDate}
			         <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
			         GROUP BY a.stat_date,parent_id) d 
		) r	
	</select>
	<select id="findUserHistorySendCount" resultType="int">
	    select count(distinct u.id) 
	    from gsms_user u 
	    inner join gsms_channel_send_report s on u.id = s.account
	    where s.enterprise_id=#{params.enterpriseId} 
     	<choose>
			<when test="params.smsType==0">
				and s.msg_type in(0,2)
			</when>
			<otherwise>
				and s.msg_type = 4
			</otherwise>
		</choose>
	     and s.stat_date between #{params.beginDate} and #{params.endDate}
	    <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	    <if test="params.userId > 0">and u.id = #{params.userId}</if>
	</select>
	
	<select id="findUserRealTimeSendCount" resultType="int">
	   SELECT COUNT(DISTINCT u.id) 
	   from gsms_user u 
	   INNER JOIN gsms_realtime_send_statistic s on u.id = s.user_id
	   where s.enterprise_id=#{params.enterpriseId}
    	<choose>
			<when test="params.smsType==0">
				and s.msg_type = 1
			</when>
			<otherwise>
				and s.msg_type = 2
			</otherwise>
		</choose>
	    and s.stat_date between #{params.beginDate} and #{params.endDate}
	    <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	    <if test="params.userId > 0">and u.id = #{params.userId}</if>
	</select>
	
	<select id="findUserAllSendCount" resultType="int">
		SELECT COUNT(*)
		FROM(
			SELECT 	p.user_id AS user_id,p.dept_id AS dept_id
				
				FROM (		
				SELECT 
					s.user_id, s.user_name, s.dept_id
					FROM (SELECT u.id AS user_id, u.user_name, u.parent_id AS dept_id,a.stat_date AS stat_date
					
					FROM gsms_channel_send_report a INNER JOIN gsms_user u ON u.id = a.account
						  WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 
						 
						  <choose>
								<when test="params.smsType==0">
									and a.msg_type in(0,2)
								</when>
								<otherwise>
									and a.msg_type = 4
								</otherwise>
							</choose>
						  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}	
						  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	    				  <if test="params.userId > 0">and u.id = #{params.userId}</if>	  	         
						  GROUP BY u.id,u.parent_id) s 
					LEFT JOIN(SELECT u.id AS user_id,a.stat_date
						  FROM gsms_channel_result_report a INNER JOIN gsms_user u ON u.id = a.account
						  WHERE a.enterprise_id=#{params.enterpriseId} 
						  <choose>
								<when test="params.smsType==0">
									and a.msg_type in(0,2)
								</when>
								<otherwise>
									and a.msg_type = 4
								</otherwise>
							</choose>
					
						  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}
						  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	    				  <if test="params.userId > 0">and u.id = #{params.userId}</if>			  
						  GROUP BY u.id,u.parent_id) r 
					ON r.user_id = s.user_id AND r.stat_date = s.stat_date) p		
				UNION  
				SELECT	d.user_id AS user_id,d.dept_id AS dept_id
					FROM (	
					 SELECT a.user_id,u.user_name,u.parent_id AS dept_id
			         FROM gsms_realtime_send_statistic a 
			         INNER JOIN gsms_user u ON u.id = a.user_id
			         WHERE a.enterprise_id=#{params.enterpriseId} 
			        <choose>
						<when test="params.smsType==0">
							and a.msg_type = 1
						</when>
						<otherwise>
							and a.msg_type = 2
						</otherwise>
					</choose>
			         AND a.stat_date = #{params.endDate}
			         <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
   				     <if test="params.userId > 0">and u.id = #{params.userId}</if>
			         GROUP BY u.id,u.parent_id) d 
		) r	
	</select>
	
	<select id="findUserHistorySend" resultMap="userStatistics">
		select s.all_receive_sum, s.all_send_sum,  
		(case when r.all_fail_sum is null then s.all_suc_sum else (s.all_suc_sum - r.all_fail_sum) end) as all_success_sum,
		(case when r.fail_sum_yd is null then s.send_sum_yd else (s.send_sum_yd - r.fail_sum_yd) end) as success_sum_yd,
		(case when r.fail_sum_lt is null then s.send_sum_lt else (s.send_sum_lt - r.fail_sum_lt) end) as success_sum_lt,
		(case when r.fail_sum_xlt is null then s.send_sum_xlt else (s.send_sum_xlt - r.fail_sum_xlt) end) as success_sum_xlt,
		(case when r.fail_sum_cdma is null then s.send_sum_cdma else (s.send_sum_cdma - r.fail_sum_cdma) end) as success_sum_cdma,
		s.user_id, s.user_name, s.dept_id from (select u.id as user_id, u.user_name, u.parent_id as dept_id,
		sum(a.state_count) as all_receive_sum,
		sum(case when a.state != 7 then a.state_count else 0 end) as all_send_sum,
		sum(case when a.state = 1 then a.state_count else 0 end) as all_suc_sum,
		sum(case when (a.state = 1 and a.carrier_id = 1) then a.state_count else 0 end) as send_sum_yd,
		sum(case when (a.state = 1 and a.carrier_id = 2) then a.state_count else 0 end) as send_sum_lt,
		sum(case when (a.state = 1 and a.carrier_id = 3) then a.state_count else 0 end) as send_sum_xlt,
		sum(case when (a.state = 1 and a.carrier_id = 4) then a.state_count else 0 end) as send_sum_cdma
		from gsms_channel_send_report a inner join gsms_user u on u.id = a.account
			  where a.enterprise_id=#{params.enterpriseId} and a.state_count > 0 
			
			  <choose>
					<when test="params.smsType==0">
						and a.msg_type in(0,2)
					</when>
					<otherwise>
						and a.msg_type = 4
					</otherwise>
				</choose>
			  and a.stat_date between #{params.beginDate} and #{params.endDate}
			  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          <if test="params.userId > 0">and u.id=#{params.userId}</if>
			  group by u.id,u.parent_id) s 
		left join(select u.id as user_id,
			  sum(case when a.state > 0 then a.state_count else 0 end) as all_fail_sum,
			  sum(case when (a.state > 0 and a.carrier_id = 1) then a.state_count else 0 end) as fail_sum_yd,
			  sum(case when (a.state > 0 and a.carrier_id = 2) then a.state_count else 0 end) as fail_sum_lt,
			  sum(case when (a.state > 0 and a.carrier_id = 3) then a.state_count else 0 end) as fail_sum_xlt,
			  sum(case when (a.state > 0 and a.carrier_id = 4) then a.state_count else 0 end) as fail_sum_cdma
			  from gsms_channel_result_report a inner join gsms_user u on u.id = a.account
			  where a.enterprise_id=#{params.enterpriseId} 
			 
			  <choose>
					<when test="params.smsType==0">
						and a.msg_type in(0,2)
					</when>
					<otherwise>
						and a.msg_type = 4
					</otherwise>
				</choose>
			  and a.stat_date between #{params.beginDate} and #{params.endDate}
			  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          <if test="params.userId > 0">and u.id=#{params.userId}</if>
			  group by u.id,u.parent_id) r 
		on r.user_id = s.user_id
       <if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if> 
	  
			limit #{page.from}, #{page.size}
	
	</select>
	
	<select id="findIndexRepot4User" resultMap="userStatistics">
		SELECT r.all_receive_sum AS all_Receive_Sum,r.all_send_sum AS all_Send_Sum,r.all_success_sum AS all_Success_Sum,r.stat_date as stat_date	
		FROM(
		SELECT 	p.all_receive_sum AS all_receive_sum,p.all_send_sum AS all_send_sum,p.all_success_sum AS all_success_sum,p.stat_date as stat_date		
		FROM (		
		SELECT s.all_receive_sum, s.all_send_sum,  
		(CASE WHEN r.all_fail_sum IS NULL THEN s.all_suc_sum ELSE (s.all_suc_sum - r.all_fail_sum) END) AS all_success_sum,s.stat_date as stat_date
		
		FROM (SELECT u.id AS user_id,u.parent_id AS deptId,a.stat_date AS stat_date, 
		SUM(a.state_count) AS all_receive_sum,
		SUM(CASE WHEN a.state != 7 THEN a.state_count ELSE 0 END) AS all_send_sum,
		SUM(CASE WHEN a.state = 1 THEN a.state_count ELSE 0 END) AS all_suc_sum

		FROM gsms_channel_send_report a INNER JOIN gsms_user u ON u.id = a.account
			  WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 				
			  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}	
			  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          <if test="params.userId > 0">and u.id=#{params.userId}</if>		  	         
			  GROUP BY a.stat_date) s 
		LEFT JOIN(SELECT u.id AS user_id,u.parent_id AS deptId,a.stat_date,
			  SUM(CASE WHEN a.state > 0 THEN a.state_count ELSE 0 END) AS all_fail_sum
			  FROM gsms_channel_result_report a INNER JOIN gsms_user u ON u.id = a.account
			  WHERE a.enterprise_id=#{params.enterpriseId}
			  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}
			  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          <if test="params.userId > 0">and u.id=#{params.userId}</if>			  
			  GROUP BY a.stat_date) r 
		ON r.stat_date = s.stat_date) p		
		UNION ALL 
		SELECT	d.all_receive_sum AS all_receive_sum,d.all_send_sum AS all_send_sum,d.all_success_sum AS all_success_sum,d.stat_date as stat_date
		
			FROM (	
			 SELECT SUM(a.receive_count) AS all_receive_sum,
			       SUM(a.submit_count) AS all_send_sum,    
			       SUM(a.submit_count) AS all_success_sum,a.stat_date			       
			       
			       FROM gsms_realtime_send_statistic a 
			       INNER JOIN gsms_user u ON u.id = a.user_id
			       WHERE a.enterprise_id=#{params.enterpriseId} 
			       AND a.stat_date = #{params.endDate}
			       <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          	   <if test="params.userId > 0">and u.id=#{params.userId}</if>
			       GROUP BY a.stat_date	     
			       ) d ) r
         GROUP BY r.stat_date
	</select>
	<select id="findUserAllSend" resultMap="userStatistics">
	<!-- 	SELECT r.user_id AS user_id,r.dept_id AS dept_id,r.user_name as user_name,r.all_receive_sum,r.all_send_sum,r.all_success_sum,r.success_sum_yd,r.success_sum_lt,
		r.success_sum_xlt,r.success_sum_cdma -->
		SELECT r.user_id AS user_id,r.dept_id AS dept_id,r.user_name as user_name,GROUP_CONCAT(r.all_receive_sum) AS all_Receive_SumStr,GROUP_CONCAT(r.all_send_sum) AS all_Send_SumStr,GROUP_CONCAT(r.all_success_sum) AS all_Success_SumStr,GROUP_CONCAT(r.success_sum_yd) AS success_SumYDStr,GROUP_CONCAT(r.success_sum_lt) AS success_SumLTStr,
		GROUP_CONCAT(r.success_sum_xlt) AS success_SumXLTStr,GROUP_CONCAT(r.success_sum_cdma) AS success_SumCDMAStr
		FROM(
		SELECT 	p.user_id AS user_id,p.dept_id AS dept_id,p.user_name,p.all_receive_sum AS all_receive_sum,p.all_send_sum AS all_send_sum,p.all_success_sum AS all_success_sum,p.success_sum_yd AS success_sum_yd,
		p.success_sum_lt AS success_sum_lt,p.success_sum_xlt AS success_sum_xlt,p.success_sum_cdma AS success_sum_cdma		
		FROM (		
		SELECT s.all_receive_sum, s.all_send_sum,  
		(CASE WHEN r.all_fail_sum IS NULL THEN s.all_suc_sum ELSE (s.all_suc_sum - r.all_fail_sum) END) AS all_success_sum,
		(CASE WHEN r.fail_sum_yd IS NULL THEN s.send_sum_yd ELSE (s.send_sum_yd - r.fail_sum_yd) END) AS success_sum_yd,
		(CASE WHEN r.fail_sum_lt IS NULL THEN s.send_sum_lt ELSE (s.send_sum_lt - r.fail_sum_lt) END) AS success_sum_lt,
		(CASE WHEN r.fail_sum_xlt IS NULL THEN s.send_sum_xlt ELSE (s.send_sum_xlt - r.fail_sum_xlt) END) AS success_sum_xlt,
		(CASE WHEN r.fail_sum_cdma IS NULL THEN s.send_sum_cdma ELSE (s.send_sum_cdma - r.fail_sum_cdma) END) AS success_sum_cdma,
		s.user_id, s.user_name, s.dept_id
		FROM (SELECT u.id AS user_id, u.user_name, u.parent_id AS dept_id,
		SUM(a.state_count) AS all_receive_sum,a.stat_date AS stat_date,
		SUM(CASE WHEN a.state != 7 THEN a.state_count ELSE 0 END) AS all_send_sum,
		SUM(CASE WHEN a.state = 1 THEN a.state_count ELSE 0 END) AS all_suc_sum,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 1) THEN a.state_count ELSE 0 END) AS send_sum_yd,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 2) THEN a.state_count ELSE 0 END) AS send_sum_lt,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 3) THEN a.state_count ELSE 0 END) AS send_sum_xlt,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 4) THEN a.state_count ELSE 0 END) AS send_sum_cdma
		FROM gsms_channel_send_report a INNER JOIN gsms_user u ON u.id = a.account
			  WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 
		
		  	<choose>
				<when test="params.smsType==0">
					and a.msg_type in(0,2)
				</when>
				<otherwise>
					and a.msg_type = 4
				</otherwise>
			</choose>
			  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}	
			  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          <if test="params.userId > 0">and u.id=#{params.userId}</if>		  	         
			  GROUP BY u.id,u.parent_id) s 
		LEFT JOIN(SELECT u.id AS user_id,a.stat_date,
			  SUM(CASE WHEN a.state > 0 THEN a.state_count ELSE 0 END) AS all_fail_sum,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 1) THEN a.state_count ELSE 0 END) AS fail_sum_yd,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 2) THEN a.state_count ELSE 0 END) AS fail_sum_lt,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 3) THEN a.state_count ELSE 0 END) AS fail_sum_xlt,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 4) THEN a.state_count ELSE 0 END) AS fail_sum_cdma
			  FROM gsms_channel_result_report a INNER JOIN gsms_user u ON u.id = a.account
			  WHERE a.enterprise_id=#{params.enterpriseId} 
			  
				<choose>
					<when test="params.smsType==0">
						and a.msg_type in(0,2)
					</when>
					<otherwise>
						and a.msg_type = 4
					</otherwise>
				</choose>
			  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}
			  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          <if test="params.userId > 0">and u.id=#{params.userId}</if>			  
			  GROUP BY u.id,u.parent_id
			 
			  ) r 
	    
		ON r.user_id = s.user_id AND r.stat_date = s.stat_date
		) p		
		UNION ALL 
		SELECT	d.user_id AS user_id,d.dept_id AS dept_id,d.user_name as user_name,d.all_receive_sum AS all_receive_sum,d.all_send_sum AS all_send_sum,d.all_success_sum AS all_success_sum,d.success_sum_yd AS success_sum_yd,
		d.success_sum_lt AS success_sum_lt,d.success_sum_xlt AS success_sum_xlt,d.success_sum_cdma AS success_sum_cdma
			FROM (	
			 SELECT SUM(a.receive_count) AS all_receive_sum,
			       SUM(a.submit_count) AS all_send_sum,    
			       SUM(a.submit_count) AS all_success_sum,
			       SUM(CASE WHEN a.carrier= 1 THEN a.submit_count ELSE 0 END) AS success_sum_yd,
			       SUM(CASE WHEN a.carrier= 2 THEN a.submit_count ELSE 0 END) AS success_sum_lt,
			       SUM(CASE WHEN a.carrier= 3 THEN a.submit_count ELSE 0 END) AS success_sum_xlt,
			       SUM(CASE WHEN a.carrier= 4 THEN a.submit_count ELSE 0 END) AS success_sum_cdma,
			       a.user_id,u.user_name,u.parent_id AS dept_id,a.stat_date
			       FROM gsms_realtime_send_statistic a 
			       INNER JOIN gsms_user u ON u.id = a.user_id
			       WHERE a.enterprise_id=#{params.enterpriseId} 
			       <choose>
						<when test="params.smsType==0">
							and a.msg_type = 1
						</when>
						<otherwise>
							and a.msg_type = 2
						</otherwise>
					</choose>
			       
			       AND a.stat_date = #{params.endDate}
			       <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          	   <if test="params.userId > 0">and u.id=#{params.userId}</if>
			       GROUP BY u.id,u.parent_id
			        
			       ) d ) r
         GROUP BY r.user_id,r.dept_id
      	 <if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
		 <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
		 <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if>
	   	 
			limit #{page.from}, #{page.size}
		 
	</select>
	
	<select id="findUserRealtimeSend" resultMap="userStatistics">
	    select sum(a.receive_count) as all_receive_sum,
	    sum(a.submit_count) as all_send_sum,
	    sum(a.submit_count) as all_success_sum,
	    sum(case when a.carrier= 1 then a.submit_count else 0 end) as success_sum_yd,
	    sum(case when a.carrier= 2 then a.submit_count else 0 end) as success_sum_lt,
	    sum(case when a.carrier= 3 then a.submit_count else 0 end) as success_sum_xlt,
	    sum(case when a.carrier= 4 then a.submit_count else 0 end) as success_sum_cdma,
	    u.parent_id as dept_id, u.id as user_id, u.user_name
   	    from gsms_realtime_send_statistic a inner join gsms_user u on u.id = a.user_id
   	    where a.enterprise_id=#{params.enterpriseId} 
   	    <choose>
			<when test="params.smsType==0">
				and a.msg_type = 1
			</when>
			<otherwise>
				and a.msg_type = 2
			</otherwise>
		</choose>

   	    and a.stat_date=#{params.endDate}
	    <if test="params.path != null">and u.path like concat(#{params.path},'%')</if>
	    <if test="params.userId > 0">and u.id=#{params.userId}</if>
	    group by u.id 
	   <if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if>
	   
		limit #{page.from}, #{page.size}
	
	</select>
   
  <insert id="addSendReport">
  	insert into gsms_channel_send_report(stat_date,biz_type,account,carrier_id,channle_id,state,state_count,gen_date,enterprise_id,msg_type) 
  	values(#{report.statDate},#{report.bizType},#{report.userId},#{report.carrier},#{report.channelId},#{report.state},#{report.count},#{report.genDate},#{report.enterpriseId},#{report.msgType})
  </insert>
  
  <insert id="addResultReport">
  	insert into gsms_channel_result_report(stat_date,biz_type,account,carrier_id,channle_id,state,state_count,gen_date,enterprise_id,msg_type) 
  	values(#{report.statDate},#{report.bizType},#{report.userId},#{report.carrier},#{report.channelId},#{report.state},#{report.count},#{report.genDate},#{report.enterpriseId},#{report.msgType})
  </insert>
  
  <delete id="deleteSendReportsByDate">
  	delete from gsms_channel_send_report where stat_date = #{date} and msg_type=#{msgType}
  </delete>
  
  <delete id="deleteResultReportsByDate">
  	delete from gsms_channel_result_report where stat_date = #{date} and msg_type=#{msgType}
  </delete>
  
  <select id="fetchSendReports" resultMap="sendReport">
  	select biz_type, account, carrier_id, channle_id, state, enterprise_id, msg_type from gsms_channel_send_report where stat_date = #{date}
  </select>
  
  <select id="fetchResultReports" resultMap="resultReport">
  	select biz_type, account, carrier_id,channle_id,state,enterprise_id,msg_type from gsms_channel_result_report where stat_date = #{date}
  </select>
 
 <select id="findBillingAccountInfoByMonthsCount" resultType="int">
	      
	     SELECT COUNT(1) FROM 
			(SELECT 
			 a.id AS id
			FROM
			  gsms_deduct_report AS a 
			  INNER JOIN gsms_capital_account AS b 
			    ON a.capital_account_id = b.id 
			  INNER JOIN gsms_user AS c 
			    ON a.user_id = c.id 
			WHERE a.enterprise_id = #{params.entId} 
			<if test="params.accountName!=null and params.accountName!= '' ">
	      		AND (b.name LIKE CONCAT('%', #{params.accountName}, '%')) 
	      	</if>
			<if test="params.beginMonth!=null and params.beginMonth!=''">
	      		AND a.deduct_date &gt;= #{params.beginMonth} 
	     	</if>
	     	<if test="params.endMonth!=null and params.endMonth!=''">
	      		AND a.deduct_date &lt; #{params.endMonth} 
	      	</if>
			 GROUP BY DATE_FORMAT(a.deduct_date,'%Y%m'),a.capital_account_id) p

 </select>
  
  <select id="queryUserListByBillAccount" resultMap="billAccountInfo">
  	  SELECT
	      b.name AS AccountName,
	      c.user_name as user_name, 
	      c.link_man as link_man,
	      d.enterprise_name as enterprise_name,
	      <if test="params.operType == 1">
	      	a.deduct_date AS deduct_date,
	      </if>
	      <if test="params.operType == 2">
	      	DATE_FORMAT(a.deduct_date,'%Y%m') AS deduct_date,
	      </if>
	      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) +SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS Sumdeduct_amount,
	      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) AS smsdeduct_amount ,
	      SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS mmsdeduct_amount
      FROM gsms_deduct_report AS a
      INNER JOIN gsms_capital_account AS b ON a.capital_account_id=b.id 
      INNER JOIN gsms_user AS c ON a.user_id=c.id and c.type=2
       left join gsms_user as d on c.parent_id=d.id and d.type=1
      WHERE a.enterprise_id=#{params.entId} 
      <if test="params.operType ==1">
      		AND a.user_id = #{params.userId}
      		AND a.deduct_date = #{params.beginDate}
      </if>
      <if test="params.operType ==2">
      		AND  DATE_FORMAT(a.deduct_date,'%Y-%m')= #{params.beginDate}	 
      		GROUP BY a.user_id
      </if>
      limit #{page.from}, #{page.size}
  </select>
  
  
  <select id="getCount4UserStatListByUserId" resultType="int">
 	 select count(distinct u.id) from gsms_user u inner join gsms_channel_send_report s on u.id = s.account
	    where s.msg_type=#{params.smsType} and s.stat_date between #{params.beginDate} and #{params.endDate}
	    <if test="params.path != null">and u.path like concat(#{params.path},'%')</if>
	    <if test="params.userId > 0">and u.id = #{params.userId}</if>
  
  </select>
  
  <select id="findSelectedUserSendCount" resultType="int">

	    SELECT  COUNT(stat_date) FROM(
			SELECT s.stat_date AS stat_date  
			FROM gsms_user u INNER JOIN gsms_channel_send_report s ON u.id = s.account WHERE s.enterprise_id = #{params.enterpriseId}
			<if test="params.smsType ==0">
			  	and s.msg_type in(0,2) 
			  </if>
			  <if test="params.smsType ==1">
			 	and s.msg_type = 4 
			  </if>			

		    and u.id = #{params.userId}
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			</if>  
			<choose>
				<when test="params.format!=null and params.format!=''">
					 and date_format(s.stat_date,#{params.format})  between #{params.beginDate} and #{params.endDate}	
					 GROUP BY DATE_FORMAT(s.stat_date, #{params.format})
				</when>
				<otherwise>
					 and s.stat_date BETWEEN #{params.beginDate} and #{params.endDate}
					 GROUP BY s.stat_date
				</otherwise>
			</choose>	
			
		) p
  </select>
  
  <select id="findSelectedUserRealTimeSendCount" resultType="int">
  	 select count(distinct u.id) from gsms_user u inner join gsms_realtime_send_statistic r on u.id = r.user_id
	    where r.enterprise_id = #{params.enterpriseId} and 
	     <if test="params.smsType ==0">
		  	 r.msg_type = 1 
		  </if>
		  <if test="params.smsType ==1">
		 	 r.msg_type = 2 
		  </if>
	     and r.stat_date=#{params.endDate}
	    <if test="params.path != null">and u.path like concat(#{params.path},'%')</if>
	    and u.id = #{params.userId}
  </select>
  
  <select id="findSelectedUserAllSendCount" resultType="int">
  	  	SELECT COUNT(*)
		FROM(
		SELECT 	p.user_id AS user_id,p.dept_id AS dept_id,p.stat_date
			
			FROM (		
			SELECT 
			s.user_id, s.user_name, s.dept_id,s.stat_date
			FROM (
			SELECT u.id AS user_id, u.user_name, u.parent_id AS dept_id,a.stat_date AS stat_date
			
			FROM gsms_channel_send_report a INNER JOIN gsms_user u ON u.id = a.account
				  WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 
				  <if test="params.smsType ==0">
				  	and a.msg_type in(0,2)
				   </if>
				   <if test="params.smsType ==1">
				 	 and a.msg_type = 4 
				   </if>
				  AND a.stat_date between #{params.beginDate} and #{params.endDate}	
				  <if test="params.path != null">and u.path like concat(#{params.path},'%')</if>
	   			  and u.id = #{params.userId}	  	         
				  GROUP BY u.parent_id,a.stat_date) s 
			) p		
		UNION 
		SELECT	d.user_id AS user_id,d.dept_id AS dept_id,d.stat_date
			FROM (	
			 SELECT a.user_id,u.user_name,u.parent_id AS dept_id,a.stat_date
			       FROM gsms_realtime_send_statistic a 
			       INNER JOIN gsms_user u ON u.id = a.user_id
			       WHERE a.enterprise_id=#{params.enterpriseId} 
			       <if test="params.smsType ==0">
				  	and  a.msg_type = 1
				   </if>
				   <if test="params.smsType ==1">
				 	and  a.msg_type = 2 
				   </if>
			       AND a.stat_date = #{params.endDate}
			       <if test="params.path != null">and u.path like concat(#{params.path},'%')</if>
	    			and u.id = #{params.userId}
			       GROUP BY u.parent_id,a.stat_date) d 
		) r
  </select>
  <select id="selectedUserRealTimeList" resultMap="userStatistics">
  			
	    select sum(a.receive_count) as all_receive_sum,
	    sum(a.submit_count) as all_send_sum,
	    sum(a.submit_count) as all_success_sum,
	    sum(case when a.carrier= 1 then a.submit_count else 0 end) as success_sum_yd,
	    sum(case when a.carrier= 2 then a.submit_count else 0 end) as success_sum_lt,
	    sum(case when a.carrier= 3 then a.submit_count else 0 end) as success_sum_xlt,
	    sum(case when a.carrier= 4 then a.submit_count else 0 end) as success_sum_cdma,
	    u.parent_id as dept_id, u.id as user_id, u.user_name,a.stat_date
   	    from gsms_realtime_send_statistic a inner join gsms_user u on u.id = a.user_id
   	    where a.enterprise_id=#{params.enterpriseId} 
   	    <if test="params.smsType ==0">
			  	and a.msg_type = 1
			  </if>
			  <if test="params.smsType ==1">
			 	 and a.msg_type = 2
			  </if>
   	    and a.stat_date=#{params.endDate}
	    <if test="params.path != null">and u.path like concat(#{params.path},'%')</if>
	    and u.id=#{params.userId}
	    group by u.id
	    <if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if> 

  </select>
  <select id="selectedUserAllSendList" resultMap="userStatistics">
  	SELECT r.user_id AS user_id,r.dept_id AS dept_id,r.user_name as user_name,r.stat_date as stat_date,r.all_receive_sum,r.all_send_sum,r.all_success_sum,r.success_sum_yd,r.success_sum_lt,
		r.success_sum_xlt,r.success_sum_cdma
		FROM(
		SELECT 	p.user_id AS user_id,p.dept_id AS dept_id,p.user_name as user_name,p.stat_date as stat_date,p.all_receive_sum AS all_receive_sum,p.all_send_sum AS all_send_sum,p.all_success_sum AS all_success_sum,p.success_sum_yd AS success_sum_yd,
		p.success_sum_lt AS success_sum_lt,p.success_sum_xlt AS success_sum_xlt,p.success_sum_cdma AS success_sum_cdma		
		FROM (		
		SELECT s.all_receive_sum, s.all_send_sum,  
		(CASE WHEN r.all_fail_sum IS NULL THEN s.all_suc_sum ELSE (s.all_suc_sum - r.all_fail_sum) END) AS all_success_sum,
		(CASE WHEN r.fail_sum_yd IS NULL THEN s.send_sum_yd ELSE (s.send_sum_yd - r.fail_sum_yd) END) AS success_sum_yd,
		(CASE WHEN r.fail_sum_lt IS NULL THEN s.send_sum_lt ELSE (s.send_sum_lt - r.fail_sum_lt) END) AS success_sum_lt,
		(CASE WHEN r.fail_sum_xlt IS NULL THEN s.send_sum_xlt ELSE (s.send_sum_xlt - r.fail_sum_xlt) END) AS success_sum_xlt,
		(CASE WHEN r.fail_sum_cdma IS NULL THEN s.send_sum_cdma ELSE (s.send_sum_cdma - r.fail_sum_cdma) END) AS success_sum_cdma,
		s.user_id, s.user_name, s.dept_id,s.stat_date
		FROM (SELECT u.id AS user_id, u.user_name, u.parent_id AS dept_id,a.stat_date as stat_date,
		SUM(a.state_count) AS all_receive_sum,
		SUM(CASE WHEN a.state != 7 THEN a.state_count ELSE 0 END) AS all_send_sum,
		SUM(CASE WHEN a.state = 1 THEN a.state_count ELSE 0 END) AS all_suc_sum,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 1) THEN a.state_count ELSE 0 END) AS send_sum_yd,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 2) THEN a.state_count ELSE 0 END) AS send_sum_lt,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 3) THEN a.state_count ELSE 0 END) AS send_sum_xlt,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 4) THEN a.state_count ELSE 0 END) AS send_sum_cdma
		FROM gsms_channel_send_report a INNER JOIN gsms_user u ON u.id = a.account
			  WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 
	
			  <if test="params.smsType ==0">
			  	AND a.msg_type in(0,2) 
			  </if>
			  <if test="params.smsType ==1">
			 	AND a.msg_type = 4 
			  </if>
			  
			  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}	
			  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          <if test="params.userId > 0">and u.id=#{params.userId}</if>		  	         
			  GROUP BY u.id,u.parent_id,a.stat_date) s 
		LEFT JOIN(SELECT u.id AS user_id,a.stat_date,
			  SUM(CASE WHEN a.state > 0 THEN a.state_count ELSE 0 END) AS all_fail_sum,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 1) THEN a.state_count ELSE 0 END) AS fail_sum_yd,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 2) THEN a.state_count ELSE 0 END) AS fail_sum_lt,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 3) THEN a.state_count ELSE 0 END) AS fail_sum_xlt,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 4) THEN a.state_count ELSE 0 END) AS fail_sum_cdma
			  FROM gsms_channel_result_report a INNER JOIN gsms_user u ON u.id = a.account
			  WHERE a.enterprise_id=#{params.enterpriseId} 
			  
			  <if test="params.smsType ==0">
			  	AND a.msg_type in(0,2) 
			  </if>
			  <if test="params.smsType ==1">
			 	AND a.msg_type = 4 
			  </if>
			  
			  AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}
			  <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          <if test="params.userId > 0">and u.id=#{params.userId}</if>			  
			  GROUP BY u.id,u.parent_id,a.stat_date) r 
		ON r.user_id = s.user_id AND r.stat_date = s.stat_date) p		
		UNION ALL 
		SELECT	d.user_id AS user_id,d.dept_id AS dept_id,d.user_name as user_name,d.stat_date as stat_date, d.all_receive_sum AS all_receive_sum,d.all_send_sum AS all_send_sum,d.all_success_sum AS all_success_sum,d.success_sum_yd AS success_sum_yd,
		d.success_sum_lt AS success_sum_lt,d.success_sum_xlt AS success_sum_xlt,d.success_sum_cdma AS success_sum_cdma
			FROM (	
			 SELECT SUM(a.receive_count) AS all_receive_sum,
			       SUM(a.submit_count) AS all_send_sum,    
			       SUM(a.submit_count) AS all_success_sum,
			       SUM(CASE WHEN a.carrier= 1 THEN a.submit_count ELSE 0 END) AS success_sum_yd,
			       SUM(CASE WHEN a.carrier= 2 THEN a.submit_count ELSE 0 END) AS success_sum_lt,
			       SUM(CASE WHEN a.carrier= 3 THEN a.submit_count ELSE 0 END) AS success_sum_xlt,
			       SUM(CASE WHEN a.carrier= 4 THEN a.submit_count ELSE 0 END) AS success_sum_cdma,
			       a.user_id,u.user_name,u.parent_id AS dept_id,a.stat_date
			       FROM gsms_realtime_send_statistic a 
			       INNER JOIN gsms_user u ON u.id = a.user_id
			       WHERE a.enterprise_id=#{params.enterpriseId} 
			 
			       	  <if test="params.smsType ==0">
					  	AND a.msg_type = 1 
					  </if>
					  <if test="params.smsType ==1">
					 	AND a.msg_type = 2 
					  </if>
			       AND a.stat_date = #{params.endDate}
			       <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	          	   <if test="params.userId > 0">and u.id=#{params.userId}</if>
			       GROUP BY u.id,u.parent_id) d ) r
         GROUP BY r.user_id,r.dept_id,r.stat_date
         <if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if> 

  </select>
  <select id="selectedUserStatisticsList" resultMap="userStatistics">
  		select s.all_receive_sum, s.all_send_sum,  
		(case when r.all_fail_sum is null then s.all_suc_sum else (s.all_suc_sum - r.all_fail_sum) end) as all_success_sum,
		(case when r.fail_sum_yd is null then s.send_sum_yd else (s.send_sum_yd - r.fail_sum_yd) end) as success_sum_yd,
		(case when r.fail_sum_lt is null then s.send_sum_lt else (s.send_sum_lt - r.fail_sum_lt) end) as success_sum_lt,
		(case when r.fail_sum_xlt is null then s.send_sum_xlt else (s.send_sum_xlt - r.fail_sum_xlt) end) as success_sum_xlt,
		(case when r.fail_sum_cdma is null then s.send_sum_cdma else (s.send_sum_cdma - r.fail_sum_cdma) end) as success_sum_cdma,
		s.user_id, s.user_name, s.dept_id,s.stat_date,s.yd_send_sum,s.lt_send_sum,s.xlt_send_sum,s.cmda_send_sum
		from 
		(
			select u.id as user_id, u.user_name, u.parent_id as dept_id, a.stat_date as stat_date,
					sum(a.state_count) as all_receive_sum,
					sum(case when (a.state != 7 and a.channle_id!=0 ) then a.state_count else 0 end) as all_send_sum,
					sum(case when (a.state != 7 and a.channle_id!=0 and a.carrier_id = 1 ) then a.state_count else 0 end) as yd_send_sum,
					sum(case when (a.state != 7 and a.channle_id!=0 and a.carrier_id = 2 ) then a.state_count else 0 end) as lt_send_sum,
					sum(case when (a.state != 7 and a.channle_id!=0 and a.carrier_id = 3 ) then a.state_count else 0 end) as xlt_send_sum,
					sum(case when (a.state != 7 and a.channle_id!=0 and a.carrier_id = 4 ) then a.state_count else 0 end) as cmda_send_sum,
					sum(case when a.state = 1 then a.state_count else 0 end) as all_suc_sum,
					sum(case when (a.state = 1 and a.carrier_id = 1) then a.state_count else 0 end) as send_sum_yd,
					sum(case when (a.state = 1 and a.carrier_id = 2) then a.state_count else 0 end) as send_sum_lt,
					sum(case when (a.state = 1 and a.carrier_id = 3) then a.state_count else 0 end) as send_sum_xlt,
					sum(case when (a.state = 1 and a.carrier_id = 4) then a.state_count else 0 end) as send_sum_cdma
			from gsms_channel_send_report a inner join gsms_user u on u.id = a.account
			  where a.enterprise_id = #{params.enterpriseId} and  a.state_count > 0 
			  <if test="params.smsType ==0">
			  	and a.msg_type in(0,2)
			  </if>
			  <if test="params.smsType ==1">
			 	 and a.msg_type = 4
			  </if>
			  and a.stat_date between #{params.beginDate} and #{params.endDate}
			  <if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			  </if>
			  and u.id=#{params.userId}
			  group by u.id,u.parent_id,a.stat_date
		 ) s 
		left join	
		(
			select u.id as user_id, a.stat_date as stat_date,
				  sum(case when a.state > 0 then a.state_count else 0 end) as all_fail_sum,
				  sum(case when (a.state > 0 and a.carrier_id = 1) then a.state_count else 0 end) as fail_sum_yd,
				  sum(case when (a.state > 0 and a.carrier_id = 2) then a.state_count else 0 end) as fail_sum_lt,
				  sum(case when (a.state > 0 and a.carrier_id = 3) then a.state_count else 0 end) as fail_sum_xlt,
				  sum(case when (a.state > 0 and a.carrier_id = 4) then a.state_count else 0 end) as fail_sum_cdma
			  from gsms_channel_result_report a inner join gsms_user u on u.id = a.account
			  where a.enterprise_id = #{params.enterpriseId} and
			  <if test="params.smsType ==0">
			  	a.msg_type in(0,2)
			  </if>
			  <if test="params.smsType ==1">
			  	a.msg_type = 4
			  </if>
			  
			  and a.stat_date between #{params.beginDate} and #{params.endDate}
			  <if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			  </if>
	          and u.id=#{params.userId}
			  group by u.id,u.parent_id,a.stat_date
		) r 
		on r.user_id = s.user_id and r.stat_date = s.stat_date 
		<if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
        <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
        <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if> 

  </select>
  
   <select id="findBillingAccountInfoByDaysCount" resultType="int">
     select count(1) from 
     	(SELECT
	      count(a.id)
	      FROM gsms_deduct_report AS a
	      INNER JOIN gsms_capital_account AS b ON a.capital_account_id=b.id 
	      INNER JOIN gsms_user AS c ON a.user_id=c.id
	      WHERE	   
	      a.enterprise_id=#{params.entId}  and 
	      a.deduct_date between #{params.beginDate} and #{params.endDate}
	      <if test="params.accountName!=null and params.accountName!= '' ">
	      		AND if('企业统一账户' = #{params.accountName},(b.parent_id is null or b.parent_id = 0),b.NAME =#{params.accountName})
	      </if>
	      GROUP BY a.capital_account_id 
	      ) p
   
    
  </select>
  
  <select id="findBillingAccountInfoByDaysList" resultMap="billAccountInfo">          
      
     SELECT
      b.name AS AccountName, 
      a.enterprise_id AS enterprise_id,
      a.user_id AS user_id,
      a.capital_account_id AS capital_account_id,IFNULL(b.parent_id,0) AS parent_id,
      a.deduct_date AS deduct_date,
      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) +SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS Sumdeduct_amount,
      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) AS smsdeduct_amount ,
      SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS mmsdeduct_amount
      FROM gsms_deduct_report AS a
      INNER JOIN gsms_capital_account AS b ON a.capital_account_id=b.id 
      INNER JOIN gsms_user AS c ON a.user_id=c.id
      WHERE 
	    a.enterprise_id=#{params.entId} and	      
		a.deduct_date between #{params.beginDate} and #{params.endDate}
		<if test="params.accountName!=null and params.accountName!= ''">
			AND if('企业统一账户' = #{params.accountName},(b.parent_id is null or b.parent_id = 0),b.NAME =#{params.accountName})
		</if>
      	GROUP BY a.capital_account_id
       <if test="sorts.sumConsume != null">order by Sumdeduct_amount ${sorts.sumConsume}</if>
       <if test="sorts.smsConsume != null">order by smsdeduct_amount ${sorts.smsConsume}</if>      
       <if test="sorts.mmsConsume != null">order by mmsdeduct_amount ${sorts.mmsConsume}</if>
       
	 limit #{page.from}, #{page.size}
  </select>
  
   <select id="queryCountAccountByEntID" resultType="int">
    	 SELECT
	        COUNT(*) FROM (
	         		  SELECT
		      b.name AS AccountName, 
		      a.enterprise_id AS enterprise_id,
		      a.user_id AS user_id,
		      a.capital_account_id AS capital_account_id,
		      a.deduct_date AS deduct_date,
		      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) +SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS Sumdeduct_amount,
		      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) AS smsdeduct_amount ,
		      SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS mmsdeduct_amount
		      FROM gsms_deduct_report AS a
		      INNER JOIN gsms_capital_account AS b ON a.capital_account_id=b.id 
		      INNER JOIN gsms_user AS c ON a.user_id=c.id
	      WHERE
	      a.enterprise_id = #{params.endId} and
	       b.id = #{params.accuntId}
	    	<if test="params.format==null">
	    		and a.deduct_date between #{params.beginDate} and #{params.endDate}		
	    		 GROUP BY a.deduct_date) p 
	    	</if>
	        <if test="params.format!=null">
	        	and date_format(a.deduct_date,#{params.format}) between #{params.beginDate} and #{params.endDate}	
	        	 GROUP BY date_format(a.deduct_date, #{params.format})) p 	
	        </if>
	        
	      	
  </select>
  
  
  <select id="querySumAccountbyAccountId" resultMap="billAccountInfo">
  		 SELECT
		      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) +SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS Sumdeduct_amount,
		      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) AS smsdeduct_amount ,
		      SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS mmsdeduct_amount
		      FROM gsms_deduct_report AS a
	      WHERE 
	        a.enterprise_id = #{params.endId} and a.capital_account_id = #{params.accuntId}	
	        <choose>
				<when test="params.format!=null and params.format!=''">
					and date_format(a.deduct_date,#{params.format}) between #{params.beginDate} and #{params.endDate}
				</when>
				<otherwise>
					and a.deduct_date between #{params.beginDate} and #{params.endDate}
				</otherwise>
			</choose>	 	
  </select>
  
  <select id="queryUserListAccountByEntID" resultMap="billAccountInfo">
  		 SELECT
		      b.name AS AccountName, 
		      a.enterprise_id AS enterprise_id,
		      a.user_id AS user_id,
		      a.capital_account_id AS capital_account_id,IFNULL(b.parent_id,0) AS parent_id,
			     <choose>
					<when test="params.format!=null">
						date_format(a.deduct_date,#{params.format}) AS deduct_date,
					</when>
					<otherwise>
						a.deduct_date AS deduct_date,
					</otherwise>
				 </choose>
		      
		      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) +SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS Sumdeduct_amount,
		      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) AS smsdeduct_amount ,
		      SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS mmsdeduct_amount
		      FROM gsms_deduct_report AS a
		      INNER JOIN gsms_capital_account AS b ON a.capital_account_id=b.id 
		      INNER JOIN gsms_user AS c ON a.user_id=c.id
	      WHERE
	       a.enterprise_id = #{params.endId} and b.id = #{params.accuntId}	
            <choose>
				<when test="params.format!=null">
					and date_format(a.deduct_date,#{params.format}) between #{params.beginDate} and #{params.endDate}		
	      			GROUP BY date_format(a.deduct_date, #{params.format})
				</when>
				<otherwise>
					and a.deduct_date between #{params.beginDate} and #{params.endDate}		
	      			GROUP BY a.deduct_date
				</otherwise>
		   </choose>       	
       	   order by deduct_date desc  		
		   <if test="page!=null">limit #{page.from}, #{page.size}</if>
  
  </select>
  
   <select id="bizTypeStatisticsCount" resultType="int">
	   select count(distinct t.id, a.stat_date) 
	   from gsms_business_type t inner join gsms_channel_send_report a on a.biz_type = t.id 
	   where 
	    a.enterprise_id=#{params.enterpriseId}  AND a.state_count > 0 
	      <if test="params.smsType ==0">
		  	  AND a.msg_type in(0,2) 
		  </if>
		  <if test="params.smsType ==1">
		 	  AND a.msg_type = 4 
		  </if>
	    and a.stat_date between #{params.beginDate} and #{params.endDate}
	   <if test="params.bizType > 0">and t.id=#{params.bizType}</if>

   </select>
   
   <select id="bizTypeRealTimeCount" resultType="int">
	   select count(distinct t.id) 
	   from gsms_business_type t inner join gsms_realtime_send_statistic a on a.biz_type = t.id 
	   where 
	    a.enterprise_id=#{params.enterpriseId}  

	   	  <if test="params.smsType ==0">
		  	  AND a.msg_type = 1
		  </if>
		  <if test="params.smsType ==1">
		 	  AND a.msg_type = 2 
		  </if>
	    and a.stat_date = #{params.endDate}
	   <if test="params.bizType > 0">and t.id=#{params.bizType}</if>

   </select>
   
   <select id="bizTypeAllSendCount" resultType="int">
   		SELECT COUNT(*)
		FROM(
		SELECT  t.id,t.stat_date  FROM 
		(SELECT t.id,a.stat_date FROM gsms_business_type t INNER JOIN gsms_channel_send_report a ON a.biz_type = t.id 
		  WHERE a.enterprise_id=#{params.enterpriseId}  AND a.state_count > 0 
		 
		  <if test="params.smsType ==0">
		  	  AND a.msg_type in(0,2) 
		  </if>
		  <if test="params.smsType ==1">
		 	  AND a.msg_type = 4 
		  </if> 
		    AND a.stat_date  between #{params.beginDate} and #{params.endDate}
		    <if test="params.bizType > 0">and t.id=#{params.bizType}</if>
		    GROUP BY  t.id,a.stat_date
		)t
				
		UNION 
		SELECT	d.id,d.stat_date 
		FROM (	
		   SELECT t.id,a.stat_date
		   FROM gsms_business_type t INNER JOIN gsms_realtime_send_statistic a ON a.biz_type = t.id 
		   WHERE a.enterprise_id=#{params.enterpriseId} 
		   
		  <if test="params.smsType ==0">
		  	  AND a.msg_type = 1 
		  </if>
		  <if test="params.smsType ==1">
		 	  AND a.msg_type = 2 
		  </if>
		   AND a.stat_date = #{params.endDate}
		   <if test="params.bizType > 0">and t.id=#{params.bizType}</if>
		   ) d 
		) r
   
   </select>
   <select id="bizTypeRealTimeStatistics" resultMap="bizTypeStatistics">
   	select sum(a.receive_count) as all_receive_sum,
       sum(a.submit_count) as all_send_sum,
       sum(a.submit_count) as all_success_sum,
       sum(case when a.carrier= 1 then a.submit_count else 0 end) as success_sum_yd,
       sum(case when a.carrier= 2 then a.submit_count else 0 end) as success_sum_lt,
       sum(case when a.carrier= 3 then a.submit_count else 0 end) as success_sum_xlt,
       sum(case when a.carrier= 4 then a.submit_count else 0 end) as success_sum_cdma,
       a.stat_date,t.state as state,    
       t.name as biztype_name
       from gsms_realtime_send_statistic a 
       inner join gsms_business_type t on t.id = a.biz_type
       where 
       	  <if test="params.smsType ==0">
		  	   a.msg_type = 1 
		  </if>
		  <if test="params.smsType ==1">
		 	   a.msg_type = 2 
		  </if>
       and a.stat_date=#{params.endDate} 
       and t.enterprise_id=#{params.enterpriseId}
       and t.id=#{params.bizType}
       <if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if>

   </select>
   <select id="bizTypeALLStatistics" resultMap="bizTypeStatistics">
   		SELECT  r.biztype_id,
		r.biztype_name,
   		r.stat_date AS stat_date,r.all_receive_sum,r.all_send_sum,r.all_success_sum,r.success_sum_yd,r.success_sum_lt,
		r.success_sum_xlt,r.success_sum_cdma,r.state as state
		FROM(
		SELECT 	p.biztype_id,p.biztype_name,p.stat_date AS stat_date,p.all_receive_sum AS all_receive_sum,p.all_send_sum AS all_send_sum,p.all_success_sum AS all_success_sum,p.success_sum_yd AS success_sum_yd,
		p.success_sum_lt AS success_sum_lt,p.success_sum_xlt AS success_sum_xlt,p.success_sum_cdma AS success_sum_cdma,p.state as state
		FROM (		
		SELECT s.biztype_id,s.biztype_name,s.all_receive_sum, s.all_send_sum,  
		(CASE WHEN r.all_fail_sum IS NULL THEN s.all_suc_sum ELSE (s.all_suc_sum - r.all_fail_sum) END) AS all_success_sum,
		(CASE WHEN r.fail_sum_yd IS NULL THEN s.send_sum_yd ELSE (s.send_sum_yd - r.fail_sum_yd) END) AS success_sum_yd,
		(CASE WHEN r.fail_sum_lt IS NULL THEN s.send_sum_lt ELSE (s.send_sum_lt - r.fail_sum_lt) END) AS success_sum_lt,
		(CASE WHEN r.fail_sum_xlt IS NULL THEN s.send_sum_xlt ELSE (s.send_sum_xlt - r.fail_sum_xlt) END) AS success_sum_xlt,
		(CASE WHEN r.fail_sum_cdma IS NULL THEN s.send_sum_cdma ELSE (s.send_sum_cdma - r.fail_sum_cdma) END) AS success_sum_cdma,
		s.stat_date,s.state as state
		FROM (SELECT a.stat_date AS stat_date,t.name AS biztype_name,t.id AS biztype_id,t.state as state,
		SUM(a.state_count) AS all_receive_sum,
		SUM(CASE WHEN a.state != 7 THEN a.state_count ELSE 0 END) AS all_send_sum,
		SUM(CASE WHEN a.state = 1 THEN a.state_count ELSE 0 END) AS all_suc_sum,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 1) THEN a.state_count ELSE 0 END) AS send_sum_yd,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 2) THEN a.state_count ELSE 0 END) AS send_sum_lt,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 3) THEN a.state_count ELSE 0 END) AS send_sum_xlt,
		SUM(CASE WHEN (a.state = 1 AND a.carrier_id = 4) THEN a.state_count ELSE 0 END) AS send_sum_cdma
		FROM gsms_channel_send_report a INNER JOIN gsms_business_type t ON t.id = a.biz_type 
			  WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 
			  
			  <if test="params.smsType ==0">
			  	  AND a.msg_type in(0,2) 
			  </if>
			  <if test="params.smsType ==1">
			 	  AND a.msg_type = 4 
			  </if>
			  
			  AND a.stat_date between #{params.beginDate} and #{params.endDate}	
			  and t.id=#{params.bizType}  	         
			  GROUP BY a.stat_date) s 
		LEFT JOIN(SELECT t.id AS biztype_id,a.stat_date,
			  SUM(CASE WHEN a.state > 0 THEN a.state_count ELSE 0 END) AS all_fail_sum,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 1) THEN a.state_count ELSE 0 END) AS fail_sum_yd,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 2) THEN a.state_count ELSE 0 END) AS fail_sum_lt,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 3) THEN a.state_count ELSE 0 END) AS fail_sum_xlt,
			  SUM(CASE WHEN (a.state > 0 AND a.carrier_id = 4) THEN a.state_count ELSE 0 END) AS fail_sum_cdma
			  FROM gsms_channel_result_report a INNER JOIN gsms_business_type t ON t.id = a.biz_type 
			  WHERE a.enterprise_id=#{params.enterpriseId} 
			 
			  <if test="params.smsType ==0">
			  	  AND a.msg_type in(0,2) 
			  </if>
			  <if test="params.smsType ==1">
			 	  AND a.msg_type = 4 
			  </if>
			  AND a.stat_date between #{params.beginDate} and #{params.endDate}	
			  and t.id=#{params.bizType}		  
			  GROUP BY a.stat_date) r 
		ON r.biztype_id = s.biztype_id AND r.stat_date = s.stat_date) p		
		UNION ALL 
		SELECT	d.biztype_id,d.biztype_name,d.stat_date AS stat_date, d.all_receive_sum AS all_receive_sum,d.all_send_sum AS all_send_sum,d.all_success_sum AS all_success_sum,d.success_sum_yd AS success_sum_yd,
		d.success_sum_lt AS success_sum_lt,d.success_sum_xlt AS success_sum_xlt,d.success_sum_cdma AS success_sum_cdma,d.state as state
			FROM (	
			 SELECT t.name AS biztype_name,t.id AS biztype_id,t.state as state,
				SUM(a.receive_count) AS all_receive_sum,
			       SUM(a.submit_count) AS all_send_sum,    
			       SUM(a.submit_count) AS all_success_sum,
			       SUM(CASE WHEN a.carrier= 1 THEN a.submit_count ELSE 0 END) AS success_sum_yd,
			       SUM(CASE WHEN a.carrier= 2 THEN a.submit_count ELSE 0 END) AS success_sum_lt,
			       SUM(CASE WHEN a.carrier= 3 THEN a.submit_count ELSE 0 END) AS success_sum_xlt,
			       SUM(CASE WHEN a.carrier= 4 THEN a.submit_count ELSE 0 END) AS success_sum_cdma,a.stat_date
			       FROM gsms_realtime_send_statistic a INNER JOIN gsms_business_type t ON t.id = a.biz_type 
			       WHERE a.enterprise_id=#{params.enterpriseId} 
			       
				  <if test="params.smsType ==0">
				  	  AND a.msg_type = 1 
				  </if>
				  <if test="params.smsType ==1">
				 	  AND a.msg_type = 2 
				  </if>
			       
			       AND a.stat_date = #{params.endDate}
			       and t.id=#{params.bizType}			      
			       GROUP BY a.stat_date) d ) r
         GROUP BY r.stat_date
       <if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if> 
       <if test="params.querysplit!=null and params.querysplit!=''">
			limit #{page.from}, #{page.size}
		</if>
   </select>
   <select id="bizTypeStatisticsList" resultMap="bizTypeStatistics">
   		select s.all_receive_sum, s.all_send_sum, 
		(case when r.all_fail_sum is null then s.all_suc_sum else s.all_suc_sum - r.all_fail_sum end) as all_success_sum,
		(case when r.fail_sum_yd is null then s.send_sum_yd else (s.send_sum_yd - r.fail_sum_yd) end) as success_sum_yd,
		(case when r.fail_sum_lt is null then s.send_sum_lt else (s.send_sum_lt - r.fail_sum_lt) end) as success_sum_lt,
		(case when r.fail_sum_lt is null then s.send_sum_xlt else (s.send_sum_xlt - r.fail_sum_xlt) end) as success_sum_xlt,
		(case when r.fail_sum_cdma is null then s.send_sum_cdma else (s.send_sum_cdma - r.fail_sum_cdma) end) as success_sum_cdma,
		 s.stat_date, s.state as state, 
		s.biztype_name		 
		from (
			select t.id as biztype_id, t.name as biztype_name,a.stat_date as stat_date,t.state as state,
			sum(a.state_count) as all_receive_sum,
			sum(case when a.state != 7 then a.state_count else 0 end) as all_send_sum,
			sum(case when a.state = 1 then a.state_count else 0 end) as all_suc_sum,
			sum(case when (a.state = 1 and a.carrier_id = 1) then a.state_count else 0 end) as send_sum_yd,
			sum(case when (a.state = 1 and a.carrier_id = 2) then a.state_count else 0 end) as send_sum_lt,
			sum(case when (a.state = 1 and a.carrier_id = 3) then a.state_count else 0 end) as send_sum_xlt,
			sum(case when (a.state = 1 and a.carrier_id = 4) then a.state_count else 0 end) as send_sum_cdma
			from gsms_channel_send_report a inner join gsms_business_type t on t.id = a.biz_type 
			where a.state_count > 0 
			
			  <if test="params.smsType ==0">
			  	  AND a.msg_type in(0,2) 
			  </if>
			  <if test="params.smsType ==1">
			 	  AND a.msg_type = 4 
			  </if>
			
			 and a.stat_date between #{params.beginDate} and #{params.endDate}		
			and a.enterprise_id=#{params.enterpriseId}
			and t.id=#{params.bizType}
			group by a.stat_date) s 
		left join(select t.id as biztype_id,a.stat_date as stat_date,
		    sum(case when a.state > 0 then a.state_count else 0 end) as all_fail_sum,
		    sum(case when (a.state > 0 and a.carrier_id = 1) then a.state_count else 0 end) as fail_sum_yd,
		    sum(case when (a.state > 0 and a.carrier_id = 2) then a.state_count else 0 end) as fail_sum_lt,
		    sum(case when (a.state > 0 and a.carrier_id = 3) then a.state_count else 0 end) as fail_sum_xlt,
		    sum(case when (a.state > 0 and a.carrier_id = 4) then a.state_count else 0 end) as fail_sum_cdma
		    from gsms_channel_result_report a inner join gsms_business_type t on t.id = a.biz_type 
		    where a.state_count > 0 
		    <if test="params.smsType ==0">
			  	  AND a.msg_type in(0,2) 
			  </if>
			  <if test="params.smsType ==1">
			 	  AND a.msg_type = 4 
			  </if>
		   
		    and a.stat_date between #{params.beginDate} and #{params.endDate}
		    and a.enterprise_id=#{params.enterpriseId}
		    and t.id=#{params.bizType}
		    group by a.stat_date) r 
		on r.biztype_id = s.biztype_id AND s.stat_date = r.stat_date
	   <if test="sorts.allReceiveSum != null">order by all_receive_sum ${sorts.allReceiveSum}</if>      
       <if test="sorts.allSendSum != null">order by all_send_sum ${sorts.allSendSum}</if>
       <if test="sorts.allSuccessSum != null">order by all_success_sum ${sorts.allSuccessSum}</if>
	   <if test="params.querysplit!=null and params.querysplit!=''">
			limit #{page.from}, #{page.size}
		</if>
   </select>
  
  <select id="getUserSendStatic" resultMap="userStatistics">
		SELECT s.enterprise_id ,
		IFNULL(s.all_receive_sum,0) AS all_receive_sum, IFNULL(s.all_send_sum,0) AS all_send_sum, 
		IFNULL((CASE WHEN r.all_fail_sum IS NULL THEN s.all_suc_sum ELSE (s.all_suc_sum - r.all_fail_sum) END),0) AS all_success_sum 
		from (select u.id as user_id, u.enterprise_id,u.parent_id as dept_id,
			sum(a.state_count) as all_receive_sum,
			sum(case when a.state != 7 then a.state_count else 0 end) as all_send_sum,
			sum(case when a.state = 1 then a.state_count else 0 end) as all_suc_sum		
			from gsms_channel_send_report a inner join gsms_user u on u.id = a.account
			where a.state_count > 0 and a.msg_type in(0,2)
			
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			</if>
			and a.stat_date between #{params.beginTime} and #{params.endTime} 
			) s 
		left join (select u.id as user_id,
			sum(case when a.state > 0 then a.state_count else 0 end) as all_fail_sum
			from gsms_channel_result_report a inner join gsms_user u on u.id = a.account 
			where a.state_count > 0 and a.msg_type in(0,2)
			and a.stat_date between #{params.beginTime} and #{params.endTime}
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			</if>
			) r 
		on s.user_id = r.user_id
	</select>
	<resultMap type="com.xuanwu.mos.domain.entity.BillingAcountInfo" id="billAccountInfo">
	    <result property="entId" column="enterprise_id" />
	    <result property="userId" column="user_id" />
		<result property="captialAccuntId" column="capital_account_id" />
		<result property="accountName" column="AccountName" />
		<result property="deductTime" column="deduct_date" />
		<result property="sumConsume" column="Sumdeduct_amount" />
		<result property="smsConsume" column="smsdeduct_amount" />
		<result property="mmsConsume" column="mmsdeduct_amount" />
		<result property="userName" column="user_name" />
		<result property="linkMan" column="link_man" />
		<result property="entName" column="enterprise_name" />
		<result property="deptName" column="department_name" />
		<result property="loginName" column="login_name" />
		<result property="parentId" column="parent_id" />
		
	</resultMap>
	<select id="userDetailList" resultMap="billAccountInfo">
		  SELECT c.user_name AS user_name , c.link_man AS link_man, d.enterprise_name AS  department_name ,  b.name AS AccountName, DATE_FORMAT(a.deduct_date,CONCAT('', '%Y-%m-%d', '') ) AS deduct_date ,
	      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) +SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS Sumdeduct_amount,
	      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) AS smsdeduct_amount ,
	      SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS mmsdeduct_amount
	      FROM gsms_deduct_report AS a
	      INNER JOIN gsms_capital_account AS b ON a.capital_account_id=b.id
	      INNER JOIN gsms_user AS c ON a.user_id=c.id
	      INNER JOIN gsms_user AS d ON c.parent_id=d.id
	      WHERE 	      
	          
	      b.id=#{params.accountId} AND a.deduct_date LIKE CONCAT('%',#{params.deductTime}, '%')
	      GROUP BY a.capital_account_id, DATE_FORMAT(a.deduct_date, CONCAT('',#{params.format}, '') ) , c.id
	      ORDER BY DATE_FORMAT(a.deduct_date, CONCAT('', #{params.format}, '') )
	      <if test="page!=null">limit #{page.from}, #{page.size}</if>
	</select>
	<select id="userDetailCount" resultType="int">
		  select count(*) from 
		  (
		  	SELECT c.user_name AS user_name , c.link_man AS link_man, d.enterprise_name AS  department_name ,  b.name AS AccountName, DATE_FORMAT(a.deduct_date,CONCAT('', '%Y-%m-%d', '') ) AS deduct_date ,
	      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) +SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS Sumdeduct_amount,
	      SUM(CASE WHEN ( msg_type = 1) THEN deduct_amount  ELSE 0 END ) AS smsdeduct_amount ,
	      SUM(CASE WHEN ( msg_type = 2) THEN deduct_amount  ELSE 0 END ) AS mmsdeduct_amount
	      FROM gsms_deduct_report AS a
	      INNER JOIN gsms_capital_account AS b ON a.capital_account_id=b.id
	      INNER JOIN gsms_user AS c ON a.user_id=c.id
	      INNER JOIN gsms_user AS d ON c.parent_id=d.id
	      WHERE 	      
	      
	      b.id=#{params.accountId} AND a.deduct_date LIKE CONCAT('%',#{params.deductTime}, '%')
	      GROUP BY a.capital_account_id, DATE_FORMAT(a.deduct_date, #{params.format}) , c.id
		  ) p
	</select>

	<select id="getEntpriseDefaultBizType" resultType="int">
		SELECT id FROM gsms_business_type WHERE enterprise_id = #{entpriseId} AND TYPE=0
	</select>
	
	
	<select id="deptCount4History" resultType="int">
		SELECT  COUNT(1) FROM (
			SELECT  u.id AS user_id,u.parent_id AS dept_id,a.stat_date AS stat_date  FROM gsms_channel_send_report a INNER JOIN gsms_user u ON u.id = a.account
			WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 
			 <choose>
				<when test="params.smsType==0">
					AND a.msg_type IN(0,2)
				</when>
				<otherwise>
					AND a.msg_type = 4
				</otherwise>
			</choose>			     
			 AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}
			 <if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			 </if>
			 GROUP BY a.stat_date,parent_id	
		)r
	</select>
	
	<select id="deptStatSUM4History" resultMap="deptStatistics">
		SELECT IFNULL(s.all_receive_sum,0) AS all_receive_sum, IFNULL(s.all_send_sum,0) AS all_send_sum,
		(CASE WHEN r.all_fail_sum IS NULL THEN s.all_suc_sum ELSE (s.all_suc_sum - r.all_fail_sum) END) AS all_success_sum
	
		FROM (SELECT u.parent_id AS parent_id,
		         a.stat_date AS stat_date,				
			SUM(a.state_count) AS all_receive_sum,
			SUM(CASE WHEN a.state != 7 THEN a.state_count ELSE 0 END) AS all_send_sum,
			SUM(CASE WHEN a.state = 1 THEN a.state_count ELSE 0 END) AS all_suc_sum

			FROM gsms_channel_send_report a INNER JOIN gsms_user u ON u.id = a.account
			WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 
			<choose>
				<when test="params.smsType==0">
					AND a.msg_type IN(0,2)
				</when>
				<otherwise>
					AND a.msg_type = 4
				</otherwise>
			</choose>
			AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}				
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			 </if>
				
		) s 
		LEFT JOIN (SELECT u.parent_id AS parent_id,
			a.stat_date AS stat_date,			
			SUM(CASE WHEN a.state > 0 THEN a.state_count ELSE 0 END) AS all_fail_sum
			FROM gsms_channel_result_report a INNER JOIN gsms_user u ON u.id = a.account 
			WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0
			<choose>
				<when test="params.smsType==0">
					AND a.msg_type IN(0,2)
				</when>
				<otherwise>
					AND a.msg_type = 4
				</otherwise>
			</choose>
			AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}
			<if test="params.path!=null and params.path!=''">
				and u.path like concat(#{params.path}, '%')
			 </if>
			) r 
		ON s.stat_date = r.stat_date		
	</select>
	<select id="deptStatSum4RealTime" resultMap="deptStatistics">
		SELECT IFNULL(SUM(a.receive_count),0) AS all_receive_sum, IFNULL(SUM(a.submit_count),0) AS all_send_sum, IFNULL(SUM(a.submit_count),0) AS all_success_sum 	  
			       FROM gsms_realtime_send_statistic a 
			       INNER JOIN gsms_user u ON u.id = a.user_id
			       WHERE a.enterprise_id=#{params.enterpriseId} 
			       <choose>
						<when test="params.smsType==0">
							and a.msg_type = 1
						</when>
						<otherwise>
							and a.msg_type = 2
						</otherwise>
					</choose>		       
			       AND a.stat_date = #{params.endDate}
			       <if test="params.path != null and params.path!='' ">and u.path like concat(#{params.path},'%')</if>
	</select>
	
	<select id="getBizStatSumData4History" resultMap="bizTypeStatistics">
	    SELECT IFNULL(A.all_receive_sum,0) as all_receive_sum,IFNULL(A.all_send_sum,0) as all_send_sum,IFNULL(A.all_success_sum,0) as all_success_sum
	    FROM (
		    SELECT s.all_receive_sum, s.all_send_sum, 
			(CASE WHEN r.all_fail_sum IS NULL THEN s.all_suc_sum ELSE (s.all_suc_sum - r.all_fail_sum) END) AS all_success_sum		
			FROM (
				SELECT 
				t.id AS biztype_id,a.stat_date,
				SUM(a.state_count) AS all_receive_sum, 
				SUM(CASE WHEN a.state != 7 THEN a.state_count ELSE 0 END) AS all_send_sum, 
				SUM(CASE WHEN a.state = 1 THEN a.state_count ELSE 0 END) AS all_suc_sum
				FROM gsms_channel_send_report a INNER JOIN gsms_business_type t ON t.id = a.biz_type 
				WHERE a.enterprise_id=#{params.enterpriseId} AND a.state_count > 0 
				<choose>
					<when test="params.smsType==0">
						AND a.msg_type IN(0,2)
					</when>
					<otherwise>
						AND a.msg_type = 4
					</otherwise>
				</choose>
				AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate} and t.id=#{params.bizType}
			) s LEFT JOIN(
			SELECT t.id AS biztype_id,a.stat_date, SUM(CASE WHEN a.state > 0 THEN a.state_count ELSE 0 END) AS all_fail_sum
				FROM gsms_channel_result_report a INNER JOIN gsms_business_type t ON t.id = a.biz_type 
				WHERE a.enterprise_id=#{params.enterpriseId} 
				<choose>
					<when test="params.smsType==0">
						AND a.msg_type IN(0,2)
					</when>
					<otherwise>
						AND a.msg_type = 4
					</otherwise>
				</choose>
				AND a.stat_date BETWEEN #{params.beginDate} and #{params.endDate}  and t.id=#{params.bizType}
			) r ON r.biztype_id = s.biztype_id AND r.stat_date = s.stat_date
	    )A
		
	</select>
	
	<select id="getBizStatSumData4RealTime" resultMap="bizTypeStatistics">
		SELECT IFNULL(SUM(a.receive_count),0) AS all_receive_sum, IFNULL(SUM(a.submit_count),0) AS all_send_sum, IFNULL(SUM(a.submit_count),0) AS all_success_sum
		FROM gsms_realtime_send_statistic a INNER JOIN gsms_business_type t ON t.id = a.biz_type 
		WHERE a.enterprise_id=#{params.enterpriseId} 
	    <choose>
			<when test="params.smsType ==0">
				AND a.msg_type = 1
			</when>
			<otherwise>
				AND a.msg_type = 2 
			</otherwise>
		</choose>
		AND a.stat_date = #{params.endDate} AND t.id=#{params.bizType}
	</select>
	
</mapper>
