<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.xuanwu.mos.mapper.UserMgrMapper">

    <resultMap id="userMap" type="User">
        <id property="id" column="id" />
        <result property="state" column="state" />
        <result property="parentId" column="parent_id" />
        <result property="userName" column="user_name" />
        <result property="identify" column="identify" />
        <result property="parentIdentify" column="parentIdentify" />
        <result property="phone" column="phone" />
        <result property="signature" column="signature" />
        <result property="sigLocation" column="sig_location" />
        <result property="enterpriseName" column="enterprise_name" />
        <result property="enterpriseId" column="enterprise_id" />
        <result property="linkMan" column="link_man" />
        <result property="domain" column="domain" />
        <result property="path" column="path" />
        <result property="accountType" column="account_type" />
        <result property="protocolType" column="protocol_type" />
        <result property="srcPort" column="source_port" />
        <result property="customerSignature" column="custom_autograph" />
        <result property="capitalAccountName" column="capitalAccountName" />
        <result property="callbackAddress" column="callback_address" />
        <result property="roleNames" column="role" />
        <result property="bizNames" column="business_type" />
        <result property="sendSpeed" column="mid_receive_speed" />
        <result property="linkNum" column="mid_max_connection" />

        <result property="upPush" column="up_push" />
        <result property="statusReportPush" column="status_report_push" />
        <result property="pushAddress" column="push_address" />
        <result property="reportPushAddress" column="report_push_address" />

        <collection property="roles" ofType="Role" javaType="ArrayList" column="id" select="rolesSelect"/>
        <collection property="bizTypes" ofType="BizType" javaType="ArrayList" column="id" select="bizTypesSelect"/>
    </resultMap>

    <resultMap id="deptMap" type="Department">
        <id property="id" column="id" />
        <result property="deptName" column="dept_name" />
        <result property="remark" column="remark" />
        <result property="parentId" column="parent_id" />
        <result property="path" column="path" />
        <result property="parentDeptName" column="parentDeptName" />
        <result property="enterpriseId" column="enterprise_id" />
        <result property="identify" column="identify" />
        <result property="roleNames" column="roleNames" />
        <result property="bizNames" column="bizNames" />
        <result property="deptNoPrefix" column="department_identify_prefix" />
        <collection property="roles" ofType="Role" javaType="ArrayList" column="id" select="rolesSelect"/>
        <collection property="bizTypes" ofType="BizType" javaType="ArrayList" column="id" select="bizTypesSelect"/>
    </resultMap>

    <resultMap id="contactGroupMap" type="ContactGroup">
        <id column="id" property="id"/>
    </resultMap>

    <resultMap id="roleMap" type="Role">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="is_default" property="default"/>
    </resultMap>

    <select id="rolesSelect" resultMap="roleMap">
        select r.id, r.name, r.is_default from gsms_role r
        inner join gsms_user_role ur on r.id=ur.role_id
        where ur.user_id=#{id}
    </select>

    <select id="bizTypesSelect" resultType="BizType">
        select bt.id,bt.name from gsms_business_type bt
        inner join gsms_user_business_type ubt on bt.id=ubt.type_id
        where ubt.user_id=#{id}
    </select>

    <sql id="userResultSql">
        <if test="params.roleId != null">
            and u.id in (select user_id from gsms_user_role where
            role_id =
            #{params.roleId})
        </if>
        <if test="params.showAllChild == true">
            <if test="params.path != null">
                and u.path like concat(#{params.path},'%')
            </if>
        </if>
        <if test="params.showAllChild == false">
            and (u.parent_id=#{params.parentId} or u.id=#{params.parentId})
        </if>
        <if test="params.userName != null">and u.user_name = #{params.userName}</if>
        <if test="params.identify != null">and u.identify like concat('%',#{params.identify},'%')</if>
        <if test="params.linkMan != null">and u.link_man like concat('%',#{params.linkMan},'%')</if>
        <if test="params.deptName != null and params.deptName != ''">and ux.enterprise_name = #{params.deptName}</if>
        <if test="params.signature != null">and u.signature like concat('%',#{params.signature},'%')</if>
        <if test="params.bizTypeId != null">
            and u.id in(select bus.user_id from gsms_user_business_type bus
            inner join gsms_business_type bt on bus.type_id=bt.id  where bt.id=#{params.bizTypeId})
        </if>
        <if test="params.customerSignature != null">
            and ui.custom_autograph=#{params.customerSignature}
        </if>
        <if test="params.accountType != null">
            and ui.account_type=#{params.accountType}
        </if>
        <if test="params.protocolType != null">
            and ui.protocol_type=#{params.protocolType}
        </if>
        <if test="params.srcPort != null">
            and ui.source_port like concat('%',#{params.srcPort},'%')
        </if>
    </sql>

    <select id="findResultCount" parameterType="map" resultType="int">
        select count(1)
        from gsms_user u
        left join gsms_user_info ui on u.id = ui.user_id
        where
        u.platform_id=#{params.platformId}
        and u.enterprise_id = #{params.enterpriseId}
        and u.type=2
        <choose>
            <when test="params.selectAllState!=null"></when>
            <otherwise>and u.state!=2</otherwise>
        </choose>
        <include refid="userResultSql"/>
    </select>

    <select id="findResults" parameterType="map" resultMap="userMap">
        select ux.enterprise_name as enterprise_name, ux.identify as parentIdentify, u.*, ui.account_type,
        ui.protocol_type, ui.source_port, ui.custom_autograph,ui.callback_address,
        ui.mid_max_connection,
        ui.mid_receive_speed,
        ui.up_push,
        ui.status_report_push,
        ui.push_address,
        ui.report_push_address,
        (
        select group_concat(r.name)from gsms_role r
        left join gsms_user_role ur on r.id=ur.role_id
        where ur.user_id=u.id
        ) as role,
        (
        select group_concat(bt.name) from gsms_business_type bt
        left join gsms_user_business_type ubt on bt.id=ubt.type_id
        where ubt.user_id=u.id
        ) as business_type
        from gsms_user u
        left join gsms_user ux on u.parent_id=ux.id
        left join gsms_user_info ui on u.id = ui.user_id
        where
        u.platform_id=#{params.platformId}
        and u.enterprise_id = #{params.enterpriseId}
        and u.type=2
        <choose>
            <when test="params.selectAllState!=null"></when>
            <otherwise>and u.state!=2</otherwise>
        </choose>
        <include refid="userResultSql"/>
        order by u.id desc
        <if test="page!=null">limit #{page.from}, #{page.size}</if>
    </select>

    <select id="getChildDepartments" resultMap="deptMap">
        select a.id,a.parent_id,a.path, a.identify,
        a.enterprise_name as dept_name
        from gsms_user a
        where a.state in(0,1) and a.type = 1
        and a.path like concat(#{path},'%')
    </select>
    
   <select id="getAllChildDepartments" resultMap="deptMap">
        select a.id,a.parent_id,a.path, a.identify,
        a.enterprise_name as dept_name
        from gsms_user a
        where a.type = 1
        and a.path like concat(#{path},'%')
    </select>
    
    <select id="getChildDepartmentsAll" resultMap="deptMap">
        select a.id,a.parent_id,a.path, a.identify,
        a.enterprise_name as dept_name
        from gsms_user a
        where a.type = 1
        and a.path like concat(#{path},'%')
    </select>

    <select id="getDeptIncludeChildDept" parameterType="map" resultMap="deptMap">
        select a.id,a.parent_id,a.path, a.identify,
        a.enterprise_name as dept_name
        from gsms_user a
        where a.state!=2 and a.type = 1
        and a.path like concat(#{path},'%')
        or a.id = #{parentId}
    </select>
    <select id="getDeptIncludeChildDept4UserStat" parameterType="map" resultMap="deptMap">
        select a.id,a.parent_id,a.path, a.identify,
        a.enterprise_name as dept_name
        from gsms_user a
        where a.type = 1
        and a.path like concat(#{path},'%')
        or a.id = #{parentId}
    </select>

    <select id="autoCompleteDepartments" resultMap="deptMap">
        select a.id,a.parent_id,a.enterprise_name as dept_name,a.path from gsms_user a
        where
        <choose>
            <when test="params.selectALL!=null and params.selectALL!=''">
                a.type = 1
            </when>
            <otherwise>
                a.state!=2 and a.type = 1
            </otherwise>
        </choose>
        <if test="params.enterpriseId!=null and params.enterpriseId>0">
            and a.enterprise_id = #{params.enterpriseId}
        </if>
        <if test="params.deptName!=null and params.deptName!=''">
            and a.enterprise_name like concat('%',#{params.deptName},'%')
        </if>
        <if test="params.path!=null and params.path!=''">
            <choose>
                <when test="params.deptId!=null and params.deptId!=''">
                    and (a.path like concat(#{params.path},'%') or a.id = #{params.deptId})
                </when>
                <otherwise>
                    and a.path like concat(#{params.path},'%')
                </otherwise>
            </choose>
        </if>
        <if test="params.parentId!=null and params.parentId>0">
            and a.id = #{params.parentId}
        </if>
    </select>

    <select id="getDeptByEntId" resultMap="deptMap" parameterType="int">
        select a.id,a.enterprise_name as dept_name,department_identify_prefix
        from gsms_user a
        where a.state!=2 and a.parent_id=#{enterpriseId}
    </select>

    <select id="getDeptIdePrefixByEntId" resultMap="deptMap" parameterType="int">
        select a.id,a.enterprise_name as dept_name,department_identify_prefix
        from gsms_user a
        where a.state!=2 and a.id=#{enterpriseId}
    </select>
    
    <select id="getDepartmentById" resultMap="deptMap" parameterType="map">
        select a.id,a.enterprise_name as dept_name
        from gsms_user a
        where
            a.state!=2
        and a.enterprise_id=#{params.enterpriseId}
        <if test="params.deptId">
            and a.id = #{params.deptId}
        </if>
    </select>

    <insert id="addDepartment" parameterType="Department" useGeneratedKeys="true" keyProperty="id">
        insert into gsms_user(enterprise_name,parent_id,remark,type,
        create_time,path,state,enterprise_id,department_type,platform_id)
        values(#{deptName}, #{parentId}, #{remark}, #{userType.index},
        #{createTime}, #{path}, #{state}, #{enterpriseId},
        1, #{platformId})
    </insert>

    <update id="updateDepartment" parameterType="Department">
        update gsms_user set identify=#{identify} where id=#{id}
    </update>

    <insert id="addUserBusinessType" parameterType="BizType">
        insert into gsms_user_business_type(type_id,user_id,bus_type)
        values(#{id}, #{userId}, #{busType})
    </insert>

    <insert id="addUserRole">
        insert into gsms_user_role(user_id,role_id) values(#{userId}, #{id})
    </insert>

    <!--<insert id="addUserAccountBind" parameterType="CapitalAccount">
        insert into gsms_user_account_bind(user_id,capital_account_id)
        values(#{userId}, #{id})
    </insert>-->

    <select id="getCountByParentId" resultType="int" parameterType="int">
        select count(*) from gsms_user
        where parent_id=#{id} and (state = 0 or state = 1)
    </select>

    <update id="delDept" parameterType="int">
        update gsms_user set state = 2, enterprise_name = concat(enterprise_name, '【已删除】') where id=#{id}
    </update>

    <delete id="delUserBusinessByUserId" parameterType="int">
        delete from gsms_user_business_type where user_id=#{userId}
    </delete>

    <delete id="delUserBusiness">
        delete from gsms_user_business_type where user_id=#{userId}
        and type_id in
        <foreach collection="bizIds" open="(" separator="," close=")" item="bizId">
            #{bizId}
        </foreach>
    </delete>

    <delete id="delUserRoles">
        delete from gsms_user_role where user_id=#{userId}
        and role_id in
        <foreach collection="roleIds" open="(" separator="," close=")" item="roleId">
            #{roleId}
        </foreach>
    </delete>

    <delete id="delUserRoleByUserId" parameterType="int">
        delete from gsms_user_role where user_id=#{userId}
    </delete>

    <delete id="delUserAccountBind" parameterType="int">
        delete from gsms_user_account_bind where user_id=#{userId}
    </delete>

    <select id="listDeptInfoCount" parameterType="map" resultType="int">
        select count(1) from gsms_user
        where (state=0 or state =1)
        and type=1 and path like concat(#{params.path}, '%')
        <if test="params.deptName != null">and enterprise_name like concat('%',#{params.deptName},'%')</if>
        <if test="params.identify != null">and identify like concat('%',#{params.identify},'%')</if>
    </select>

    <select id="listDeptInfo" parameterType="map" resultMap="deptMap">
        select u.id,u.parent_id,u.enterprise_id,u.enterprise_name as dept_name,u.identify,
        u2.enterprise_name as parentDeptName, u.remark,u.path,
        (select GROUP_CONCAT(r.name)from gsms_role r inner join gsms_user_role ur on r.id=ur.role_id where ur.user_id=u.id) as roleNames,
        (select GROUP_CONCAT(bt.name) from gsms_business_type bt inner join gsms_user_business_type ubt on bt.id=ubt.type_id where ubt.user_id=u.id) as bizNames
        from gsms_user u
        left join gsms_user u2 on u.parent_id = u2.id
        where (u.state=0 or u.state =1)
        and u.type=1 and u.path like concat(#{params.path}, '%')
        <if test="params.deptName != null">and u.enterprise_name like concat('%',#{params.deptName},'%')</if>
        <if test="params._eq_deptName != null and params._eq_deptName != ''">and u.enterprise_name = #{params._eq_deptName}</if>
        <if test="params.identify != null">and u.identify like concat('%',#{params.identify},'%')</if>
        order by u.id desc
        <if test="page!=null">limit #{page.from}, #{page.size}</if>
    </select>

    <update id="updateUser" parameterType="User">
        update gsms_user set user_name = #{userName}, link_man = #{linkMan}, phone = #{phone},
        identify = #{identify}, remark = #{remark}, state = #{state.index},
        sig_location = #{sigLocation}, signature = #{signature} where id = #{id}
    </update>

    <delete id="delSelectUserBusiness">
        delete from gsms_user_business_type where user_id in
        <foreach collection="array" item="userId" index="index" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <delete id="delSelectUserRoles" parameterType="string">
        delete from gsms_user_role where user_id in
        <foreach collection="array" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </delete>

    <update id="updateSelectUsers" parameterType="string">
        update gsms_user set state = 2, user_name = concat(user_name, '【已删除】') where id in
        <foreach collection="array" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </update>

    <select id="findContactGroupByUserId" parameterType="string" resultMap="contactGroupMap">
        select id from gsms_contact_group where user_id in(#{userIds}) order by id desc
    </select>

    <select id="findUserDetail" parameterType="map" resultMap="userMap">
        select u.id,u.user_name,u.enterprise_name,u.link_man,
        u.identify,u.signature,u.sig_location,u.state,u.phone
        from gsms_user u
        where (u.state=0 or u.state =1) and u.type=#{userType} and u.id=#{userId}
    </select>

    <select id="findAllUserByEntId" parameterType="int" resultMap="userMap">
        select id,user_name,link_man,identify,path
        from gsms_user
        where state != 2 and type=2 and enterprise_id=#{enterpriseId}
    </select>

    <select id="findAllDeptByEntId" parameterType="int" resultMap="deptMap">
        select id,identify,enterprise_name as dept_name,parent_id,path from gsms_user
        where (state=0 or state=1) and type=1 and enterprise_id=#{enterpriseId};
    </select>

    <delete id="delUserInfo">
        delete from gsms_user_info where user_id in
        <foreach collection="array" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </delete>

    <select id="getDelAccountNames" resultType="string">
        select group_concat(user_name) from gsms_user where id in
        <foreach collection="array" item="userId" index="index" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <select id="getUserIdByPath" resultType="int">
        select id from gsms_user where path like concat(#{path},'%') and state in(0,1);
    </select>

</mapper>
